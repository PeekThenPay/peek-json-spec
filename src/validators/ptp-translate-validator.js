"use strict";module.exports = validate20;module.exports.default = validate20;const schema31 = {"$schema":"https://json-schema.org/draft/2020-12/schema","title":"Peek-Then-Pay Translate Intent Response","description":"Target-language rendering of a textual resource or selection, with provenance and optional alignments.","type":"object","properties":{"canonicalUrl":{"type":"string","format":"uri"},"contentType":{"$ref":"common-defs.schema.json#/$defs/contentType"},"mediaType":{"$ref":"common-defs.schema.json#/$defs/mediaType"},"normalization":{"$ref":"common-defs.schema.json#/$defs/baseNormalization"},"languages":{"type":"object","properties":{"source":{"type":"string","description":"BCP-47; detected or provided"},"detected":{"type":"boolean","default":false},"target":{"type":"string","description":"BCP-47 target language"}},"required":["target"]},"format":{"type":"string","enum":["plain","markdown","html","json"],"description":"Presentation of translated text."},"segments":{"type":"array","description":"Parallel corpus segments in source order.","items":{"type":"object","properties":{"index":{"type":"integer","minimum":0},"source":{"type":"string"},"target":{"type":"string"},"confidence":{"type":"number","minimum":0,"maximum":1},"preserved":{"type":"array","items":{"type":"string","enum":["links","code","entities","quotes","casing"]}},"alignment":{"type":"object","description":"Optional span alignments when ptp_align=1.","properties":{"unit":{"type":"string","enum":["char","token"],"default":"char"},"pairs":{"type":"array","items":{"type":"object","properties":{"src":{"type":"array","items":{"type":"integer"},"minItems":2,"maxItems":2},"tgt":{"type":"array","items":{"type":"integer"},"minItems":2,"maxItems":2}},"required":["src","tgt"],"additionalProperties":false}}},"required":["unit","pairs"],"additionalProperties":false}},"required":["index","target"],"additionalProperties":false}},"provenance":{"allOf":[{"$ref":"common-defs.schema.json#/$defs/baseProvenance"},{"properties":{"method":{"type":"string","enum":["mt","human","postedit"]},"model":{"$ref":"common-defs.schema.json#/$defs/modelMetadata"},"glossary":{"type":"string","description":"Glossary id or URL applied"},"memory":{"type":"string","description":"Translation memory id used"}},"required":["method","generatedAt"]}]},"length":{"allOf":[{"$ref":"common-defs.schema.json#/$defs/baseLength"},{"required":["inputTokens","outputTokens"]}]}},"required":["canonicalUrl","contentType","mediaType","languages","format","segments","provenance","length"],"additionalProperties":false};const schema33 = {"type":"string","description":"High-level classification for routing.","enum":["article","blog","doc","news","video","audio","dataset","other"]};const schema34 = {"type":"string","description":"MIME type of the resource.","anyOf":[{"enum":["text/html","text/markdown","text/plain","application/pdf","application/json","image/jpeg","image/png","audio/mpeg","video/mp4","application/octet-stream","unknown"]},{"pattern":"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"}]};const schema35 = {"type":"object","description":"Content cleaning and transformation tracking.","properties":{"htmlStripped":{"type":"boolean","default":false},"boilerplateRemoved":{"type":"boolean","default":false},"canonicalizedWhitespace":{"type":"boolean","default":false},"deduplicated":{"type":"boolean","default":false}},"additionalProperties":true};const schema37 = {"type":"object","description":"Model information for AI-generated content.","properties":{"id":{"type":"string","description":"Model identifier"},"provider":{"type":"string","description":"Model provider (e.g., 'openai', 'anthropic', 'google', 'meta', 'mistral', 'cohere')"},"name":{"type":"string","description":"Model name"},"version":{"type":"string","description":"Model version"},"digest":{"type":"string","pattern":"^sha256:[a-fA-F0-9]{64}$","description":"SHA256 digest of model"}},"required":["id","provider","name","version","digest"],"additionalProperties":false};const schema39 = {"type":"object","description":"Token counting and truncation tracking for content delivery and billing.","properties":{"inputTokens":{"type":"integer","minimum":0,"description":"Tokens in the source content processed."},"outputTokens":{"type":"integer","minimum":0,"description":"Tokens delivered or generated in response."},"totalTokens":{"type":"integer","minimum":0,"description":"Total tokens processed (may equal input + output)."},"truncated":{"type":"boolean","default":false,"description":"Whether content was truncated due to limits."},"truncateReason":{"type":"string","enum":["budget_limit","policy_limit","model_limit","none"],"default":"none","description":"Reason for truncation if applicable."}},"additionalProperties":false};const func1 = Object.prototype.hasOwnProperty;const formats0 = require("ajv-formats/dist/formats").fullFormats.uri;const pattern4 = new RegExp("^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$", "u");const pattern5 = new RegExp("^sha256:[a-fA-F0-9]{64}$", "u");const schema36 = {"type":"object","description":"Core provenance fields for content integrity, generation tracking, and attribution.","properties":{"contentHash":{"type":"string","description":"Stable hash of source content (e.g., sha256:...)."},"generatedAt":{"type":"string","format":"date-time","description":"Timestamp when the response was generated/computed."},"model":{"$ref":"#/$defs/modelMetadata","description":"Model used for content processing or generation."},"sourceUrl":{"type":"string","format":"uri","description":"Original URL where content was retrieved."},"sourceTitle":{"type":"string","description":"Title of the original source document."},"sourceAuthor":{"type":"string","description":"Author or creator of the original content."},"rights":{"type":"string","description":"Copyright or rights statement for the source content."},"attribution":{"type":"string","description":"Required attribution text or format."},"license":{"type":"string","description":"License identifier or URL for the source content."},"algorithm":{"type":"string","description":"Processing algorithm or method used for content transformation."},"confidence":{"type":"number","minimum":0,"maximum":1,"description":"Confidence score for generated or processed content."}},"required":["contentHash"]};const formats2 = require("ajv-formats/dist/formats").fullFormats["date-time"];function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate22.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.contentHash === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "contentHash"},message:"must have required property '"+"contentHash"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.contentHash !== undefined){if(typeof data.contentHash !== "string"){const err1 = {instancePath:instancePath+"/contentHash",schemaPath:"#/properties/contentHash/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}if(data.generatedAt !== undefined){let data1 = data.generatedAt;if(typeof data1 === "string"){if(!(formats2.validate(data1))){const err2 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}else {const err3 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}if(data.model !== undefined){let data2 = data.model;if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.id === undefined){const err4 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data2.provider === undefined){const err5 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "provider"},message:"must have required property '"+"provider"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data2.name === undefined){const err6 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(data2.version === undefined){const err7 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "version"},message:"must have required property '"+"version"+"'"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}if(data2.digest === undefined){const err8 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "digest"},message:"must have required property '"+"digest"+"'"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}for(const key0 in data2){if(!(((((key0 === "id") || (key0 === "provider")) || (key0 === "name")) || (key0 === "version")) || (key0 === "digest"))){const err9 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}if(data2.id !== undefined){if(typeof data2.id !== "string"){const err10 = {instancePath:instancePath+"/model/id",schemaPath:"#/$defs/modelMetadata/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data2.provider !== undefined){if(typeof data2.provider !== "string"){const err11 = {instancePath:instancePath+"/model/provider",schemaPath:"#/$defs/modelMetadata/properties/provider/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}if(data2.name !== undefined){if(typeof data2.name !== "string"){const err12 = {instancePath:instancePath+"/model/name",schemaPath:"#/$defs/modelMetadata/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}if(data2.version !== undefined){if(typeof data2.version !== "string"){const err13 = {instancePath:instancePath+"/model/version",schemaPath:"#/$defs/modelMetadata/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}}if(data2.digest !== undefined){let data7 = data2.digest;if(typeof data7 === "string"){if(!pattern5.test(data7)){const err14 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/pattern",keyword:"pattern",params:{pattern: "^sha256:[a-fA-F0-9]{64}$"},message:"must match pattern \""+"^sha256:[a-fA-F0-9]{64}$"+"\""};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}else {const err15 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}}else {const err16 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}if(data.sourceUrl !== undefined){let data8 = data.sourceUrl;if(typeof data8 === "string"){if(!(formats0(data8))){const err17 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}else {const err18 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}if(data.sourceTitle !== undefined){if(typeof data.sourceTitle !== "string"){const err19 = {instancePath:instancePath+"/sourceTitle",schemaPath:"#/properties/sourceTitle/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}if(data.sourceAuthor !== undefined){if(typeof data.sourceAuthor !== "string"){const err20 = {instancePath:instancePath+"/sourceAuthor",schemaPath:"#/properties/sourceAuthor/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}if(data.rights !== undefined){if(typeof data.rights !== "string"){const err21 = {instancePath:instancePath+"/rights",schemaPath:"#/properties/rights/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}if(data.attribution !== undefined){if(typeof data.attribution !== "string"){const err22 = {instancePath:instancePath+"/attribution",schemaPath:"#/properties/attribution/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}if(data.license !== undefined){if(typeof data.license !== "string"){const err23 = {instancePath:instancePath+"/license",schemaPath:"#/properties/license/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}if(data.algorithm !== undefined){if(typeof data.algorithm !== "string"){const err24 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data.confidence !== undefined){let data15 = data.confidence;if(typeof data15 == "number"){if(data15 > 1 || isNaN(data15)){const err25 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}if(data15 < 0 || isNaN(data15)){const err26 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}else {const err27 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}}else {const err28 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}validate22.errors = vErrors;return errors === 0;}validate22.evaluated = {"props":{"contentHash":true,"generatedAt":true,"model":true,"sourceUrl":true,"sourceTitle":true,"sourceAuthor":true,"rights":true,"attribution":true,"license":true,"algorithm":true,"confidence":true},"dynamicProps":false,"dynamicItems":false};function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate20.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.canonicalUrl === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "canonicalUrl"},message:"must have required property '"+"canonicalUrl"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.contentType === undefined){const err1 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "contentType"},message:"must have required property '"+"contentType"+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.mediaType === undefined){const err2 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "mediaType"},message:"must have required property '"+"mediaType"+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}if(data.languages === undefined){const err3 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "languages"},message:"must have required property '"+"languages"+"'"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(data.format === undefined){const err4 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "format"},message:"must have required property '"+"format"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data.segments === undefined){const err5 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "segments"},message:"must have required property '"+"segments"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data.provenance === undefined){const err6 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "provenance"},message:"must have required property '"+"provenance"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(data.length === undefined){const err7 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "length"},message:"must have required property '"+"length"+"'"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}for(const key0 in data){if(!(func1.call(schema31.properties, key0))){const err8 = {instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}if(data.canonicalUrl !== undefined){let data0 = data.canonicalUrl;if(typeof data0 === "string"){if(!(formats0(data0))){const err9 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}else {const err10 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data.contentType !== undefined){let data1 = data.contentType;if(typeof data1 !== "string"){const err11 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}if(!((((((((data1 === "article") || (data1 === "blog")) || (data1 === "doc")) || (data1 === "news")) || (data1 === "video")) || (data1 === "audio")) || (data1 === "dataset")) || (data1 === "other"))){const err12 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/enum",keyword:"enum",params:{allowedValues: schema33.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}if(data.mediaType !== undefined){let data2 = data.mediaType;if(typeof data2 !== "string"){const err13 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}const _errs10 = errors;let valid3 = false;const _errs11 = errors;if(!(((((((((((data2 === "text/html") || (data2 === "text/markdown")) || (data2 === "text/plain")) || (data2 === "application/pdf")) || (data2 === "application/json")) || (data2 === "image/jpeg")) || (data2 === "image/png")) || (data2 === "audio/mpeg")) || (data2 === "video/mp4")) || (data2 === "application/octet-stream")) || (data2 === "unknown"))){const err14 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/0/enum",keyword:"enum",params:{allowedValues: schema34.anyOf[0].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}var _valid0 = _errs11 === errors;valid3 = valid3 || _valid0;const _errs12 = errors;if(typeof data2 === "string"){if(!pattern4.test(data2)){const err15 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/1/pattern",keyword:"pattern",params:{pattern: "^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"},message:"must match pattern \""+"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"+"\""};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}var _valid0 = _errs12 === errors;valid3 = valid3 || _valid0;if(!valid3){const err16 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}else {errors = _errs10;if(vErrors !== null){if(_errs10){vErrors.length = _errs10;}else {vErrors = null;}}}}if(data.normalization !== undefined){let data3 = data.normalization;if(data3 && typeof data3 == "object" && !Array.isArray(data3)){if(data3.htmlStripped !== undefined){if(typeof data3.htmlStripped !== "boolean"){const err17 = {instancePath:instancePath+"/normalization/htmlStripped",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/htmlStripped/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}if(data3.boilerplateRemoved !== undefined){if(typeof data3.boilerplateRemoved !== "boolean"){const err18 = {instancePath:instancePath+"/normalization/boilerplateRemoved",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/boilerplateRemoved/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}if(data3.canonicalizedWhitespace !== undefined){if(typeof data3.canonicalizedWhitespace !== "boolean"){const err19 = {instancePath:instancePath+"/normalization/canonicalizedWhitespace",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/canonicalizedWhitespace/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}if(data3.deduplicated !== undefined){if(typeof data3.deduplicated !== "boolean"){const err20 = {instancePath:instancePath+"/normalization/deduplicated",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/deduplicated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}}else {const err21 = {instancePath:instancePath+"/normalization",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}if(data.languages !== undefined){let data8 = data.languages;if(data8 && typeof data8 == "object" && !Array.isArray(data8)){if(data8.target === undefined){const err22 = {instancePath:instancePath+"/languages",schemaPath:"#/properties/languages/required",keyword:"required",params:{missingProperty: "target"},message:"must have required property '"+"target"+"'"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}if(data8.source !== undefined){if(typeof data8.source !== "string"){const err23 = {instancePath:instancePath+"/languages/source",schemaPath:"#/properties/languages/properties/source/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}if(data8.detected !== undefined){if(typeof data8.detected !== "boolean"){const err24 = {instancePath:instancePath+"/languages/detected",schemaPath:"#/properties/languages/properties/detected/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data8.target !== undefined){if(typeof data8.target !== "string"){const err25 = {instancePath:instancePath+"/languages/target",schemaPath:"#/properties/languages/properties/target/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}}}else {const err26 = {instancePath:instancePath+"/languages",schemaPath:"#/properties/languages/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}if(data.format !== undefined){let data12 = data.format;if(typeof data12 !== "string"){const err27 = {instancePath:instancePath+"/format",schemaPath:"#/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}if(!((((data12 === "plain") || (data12 === "markdown")) || (data12 === "html")) || (data12 === "json"))){const err28 = {instancePath:instancePath+"/format",schemaPath:"#/properties/format/enum",keyword:"enum",params:{allowedValues: schema31.properties.format.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}}if(data.segments !== undefined){let data13 = data.segments;if(Array.isArray(data13)){const len0 = data13.length;for(let i0=0; i0<len0; i0++){let data14 = data13[i0];if(data14 && typeof data14 == "object" && !Array.isArray(data14)){if(data14.index === undefined){const err29 = {instancePath:instancePath+"/segments/" + i0,schemaPath:"#/properties/segments/items/required",keyword:"required",params:{missingProperty: "index"},message:"must have required property '"+"index"+"'"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}if(data14.target === undefined){const err30 = {instancePath:instancePath+"/segments/" + i0,schemaPath:"#/properties/segments/items/required",keyword:"required",params:{missingProperty: "target"},message:"must have required property '"+"target"+"'"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}for(const key1 in data14){if(!((((((key1 === "index") || (key1 === "source")) || (key1 === "target")) || (key1 === "confidence")) || (key1 === "preserved")) || (key1 === "alignment"))){const err31 = {instancePath:instancePath+"/segments/" + i0,schemaPath:"#/properties/segments/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}}if(data14.index !== undefined){let data15 = data14.index;if(!((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15)))){const err32 = {instancePath:instancePath+"/segments/" + i0+"/index",schemaPath:"#/properties/segments/items/properties/index/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}if(typeof data15 == "number"){if(data15 < 0 || isNaN(data15)){const err33 = {instancePath:instancePath+"/segments/" + i0+"/index",schemaPath:"#/properties/segments/items/properties/index/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}}}if(data14.source !== undefined){if(typeof data14.source !== "string"){const err34 = {instancePath:instancePath+"/segments/" + i0+"/source",schemaPath:"#/properties/segments/items/properties/source/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}}if(data14.target !== undefined){if(typeof data14.target !== "string"){const err35 = {instancePath:instancePath+"/segments/" + i0+"/target",schemaPath:"#/properties/segments/items/properties/target/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}if(data14.confidence !== undefined){let data18 = data14.confidence;if(typeof data18 == "number"){if(data18 > 1 || isNaN(data18)){const err36 = {instancePath:instancePath+"/segments/" + i0+"/confidence",schemaPath:"#/properties/segments/items/properties/confidence/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}if(data18 < 0 || isNaN(data18)){const err37 = {instancePath:instancePath+"/segments/" + i0+"/confidence",schemaPath:"#/properties/segments/items/properties/confidence/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}}else {const err38 = {instancePath:instancePath+"/segments/" + i0+"/confidence",schemaPath:"#/properties/segments/items/properties/confidence/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}}if(data14.preserved !== undefined){let data19 = data14.preserved;if(Array.isArray(data19)){const len1 = data19.length;for(let i1=0; i1<len1; i1++){let data20 = data19[i1];if(typeof data20 !== "string"){const err39 = {instancePath:instancePath+"/segments/" + i0+"/preserved/" + i1,schemaPath:"#/properties/segments/items/properties/preserved/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}if(!(((((data20 === "links") || (data20 === "code")) || (data20 === "entities")) || (data20 === "quotes")) || (data20 === "casing"))){const err40 = {instancePath:instancePath+"/segments/" + i0+"/preserved/" + i1,schemaPath:"#/properties/segments/items/properties/preserved/items/enum",keyword:"enum",params:{allowedValues: schema31.properties.segments.items.properties.preserved.items.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}}}else {const err41 = {instancePath:instancePath+"/segments/" + i0+"/preserved",schemaPath:"#/properties/segments/items/properties/preserved/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}}if(data14.alignment !== undefined){let data21 = data14.alignment;if(data21 && typeof data21 == "object" && !Array.isArray(data21)){if(data21.unit === undefined){const err42 = {instancePath:instancePath+"/segments/" + i0+"/alignment",schemaPath:"#/properties/segments/items/properties/alignment/required",keyword:"required",params:{missingProperty: "unit"},message:"must have required property '"+"unit"+"'"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}if(data21.pairs === undefined){const err43 = {instancePath:instancePath+"/segments/" + i0+"/alignment",schemaPath:"#/properties/segments/items/properties/alignment/required",keyword:"required",params:{missingProperty: "pairs"},message:"must have required property '"+"pairs"+"'"};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}for(const key2 in data21){if(!((key2 === "unit") || (key2 === "pairs"))){const err44 = {instancePath:instancePath+"/segments/" + i0+"/alignment",schemaPath:"#/properties/segments/items/properties/alignment/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}}if(data21.unit !== undefined){let data22 = data21.unit;if(typeof data22 !== "string"){const err45 = {instancePath:instancePath+"/segments/" + i0+"/alignment/unit",schemaPath:"#/properties/segments/items/properties/alignment/properties/unit/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}if(!((data22 === "char") || (data22 === "token"))){const err46 = {instancePath:instancePath+"/segments/" + i0+"/alignment/unit",schemaPath:"#/properties/segments/items/properties/alignment/properties/unit/enum",keyword:"enum",params:{allowedValues: schema31.properties.segments.items.properties.alignment.properties.unit.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}}if(data21.pairs !== undefined){let data23 = data21.pairs;if(Array.isArray(data23)){const len2 = data23.length;for(let i2=0; i2<len2; i2++){let data24 = data23[i2];if(data24 && typeof data24 == "object" && !Array.isArray(data24)){if(data24.src === undefined){const err47 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2,schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/required",keyword:"required",params:{missingProperty: "src"},message:"must have required property '"+"src"+"'"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}if(data24.tgt === undefined){const err48 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2,schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/required",keyword:"required",params:{missingProperty: "tgt"},message:"must have required property '"+"tgt"+"'"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}for(const key3 in data24){if(!((key3 === "src") || (key3 === "tgt"))){const err49 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2,schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err49];}else {vErrors.push(err49);}errors++;}}if(data24.src !== undefined){let data25 = data24.src;if(Array.isArray(data25)){if(data25.length > 2){const err50 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/src",schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/src/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}if(data25.length < 2){const err51 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/src",schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/src/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}const len3 = data25.length;for(let i3=0; i3<len3; i3++){let data26 = data25[i3];if(!((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26)))){const err52 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/src/" + i3,schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/src/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}}}else {const err53 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/src",schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/src/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}}if(data24.tgt !== undefined){let data27 = data24.tgt;if(Array.isArray(data27)){if(data27.length > 2){const err54 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/tgt",schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/tgt/maxItems",keyword:"maxItems",params:{limit: 2},message:"must NOT have more than 2 items"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}if(data27.length < 2){const err55 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/tgt",schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/tgt/minItems",keyword:"minItems",params:{limit: 2},message:"must NOT have fewer than 2 items"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}const len4 = data27.length;for(let i4=0; i4<len4; i4++){let data28 = data27[i4];if(!((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28)))){const err56 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/tgt/" + i4,schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/tgt/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}}}else {const err57 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2+"/tgt",schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/properties/tgt/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}}}else {const err58 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs/" + i2,schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}}}else {const err59 = {instancePath:instancePath+"/segments/" + i0+"/alignment/pairs",schemaPath:"#/properties/segments/items/properties/alignment/properties/pairs/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}}}else {const err60 = {instancePath:instancePath+"/segments/" + i0+"/alignment",schemaPath:"#/properties/segments/items/properties/alignment/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}}}else {const err61 = {instancePath:instancePath+"/segments/" + i0,schemaPath:"#/properties/segments/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}}}else {const err62 = {instancePath:instancePath+"/segments",schemaPath:"#/properties/segments/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err62];}else {vErrors.push(err62);}errors++;}}if(data.provenance !== undefined){let data29 = data.provenance;if(!(validate22(data29, {instancePath:instancePath+"/provenance",parentData:data,parentDataProperty:"provenance",rootData,dynamicAnchors}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}if(data29 && typeof data29 == "object" && !Array.isArray(data29)){if(data29.method === undefined){const err63 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "method"},message:"must have required property '"+"method"+"'"};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}if(data29.generatedAt === undefined){const err64 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "generatedAt"},message:"must have required property '"+"generatedAt"+"'"};if(vErrors === null){vErrors = [err64];}else {vErrors.push(err64);}errors++;}if(data29.method !== undefined){let data30 = data29.method;if(typeof data30 !== "string"){const err65 = {instancePath:instancePath+"/provenance/method",schemaPath:"#/properties/provenance/allOf/1/properties/method/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}if(!(((data30 === "mt") || (data30 === "human")) || (data30 === "postedit"))){const err66 = {instancePath:instancePath+"/provenance/method",schemaPath:"#/properties/provenance/allOf/1/properties/method/enum",keyword:"enum",params:{allowedValues: schema31.properties.provenance.allOf[1].properties.method.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}}if(data29.model !== undefined){let data31 = data29.model;if(data31 && typeof data31 == "object" && !Array.isArray(data31)){if(data31.id === undefined){const err67 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}if(data31.provider === undefined){const err68 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "provider"},message:"must have required property '"+"provider"+"'"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}if(data31.name === undefined){const err69 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}if(data31.version === undefined){const err70 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "version"},message:"must have required property '"+"version"+"'"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}if(data31.digest === undefined){const err71 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "digest"},message:"must have required property '"+"digest"+"'"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}for(const key4 in data31){if(!(((((key4 === "id") || (key4 === "provider")) || (key4 === "name")) || (key4 === "version")) || (key4 === "digest"))){const err72 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}}if(data31.id !== undefined){if(typeof data31.id !== "string"){const err73 = {instancePath:instancePath+"/provenance/model/id",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err73];}else {vErrors.push(err73);}errors++;}}if(data31.provider !== undefined){if(typeof data31.provider !== "string"){const err74 = {instancePath:instancePath+"/provenance/model/provider",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/provider/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err74];}else {vErrors.push(err74);}errors++;}}if(data31.name !== undefined){if(typeof data31.name !== "string"){const err75 = {instancePath:instancePath+"/provenance/model/name",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err75];}else {vErrors.push(err75);}errors++;}}if(data31.version !== undefined){if(typeof data31.version !== "string"){const err76 = {instancePath:instancePath+"/provenance/model/version",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err76];}else {vErrors.push(err76);}errors++;}}if(data31.digest !== undefined){let data36 = data31.digest;if(typeof data36 === "string"){if(!pattern5.test(data36)){const err77 = {instancePath:instancePath+"/provenance/model/digest",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/digest/pattern",keyword:"pattern",params:{pattern: "^sha256:[a-fA-F0-9]{64}$"},message:"must match pattern \""+"^sha256:[a-fA-F0-9]{64}$"+"\""};if(vErrors === null){vErrors = [err77];}else {vErrors.push(err77);}errors++;}}else {const err78 = {instancePath:instancePath+"/provenance/model/digest",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err78];}else {vErrors.push(err78);}errors++;}}}else {const err79 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err79];}else {vErrors.push(err79);}errors++;}}if(data29.glossary !== undefined){if(typeof data29.glossary !== "string"){const err80 = {instancePath:instancePath+"/provenance/glossary",schemaPath:"#/properties/provenance/allOf/1/properties/glossary/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err80];}else {vErrors.push(err80);}errors++;}}if(data29.memory !== undefined){if(typeof data29.memory !== "string"){const err81 = {instancePath:instancePath+"/provenance/memory",schemaPath:"#/properties/provenance/allOf/1/properties/memory/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err81];}else {vErrors.push(err81);}errors++;}}}}if(data.length !== undefined){let data39 = data.length;if(data39 && typeof data39 == "object" && !Array.isArray(data39)){for(const key5 in data39){if(!(((((key5 === "inputTokens") || (key5 === "outputTokens")) || (key5 === "totalTokens")) || (key5 === "truncated")) || (key5 === "truncateReason"))){const err82 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key5},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err82];}else {vErrors.push(err82);}errors++;}}if(data39.inputTokens !== undefined){let data40 = data39.inputTokens;if(!((typeof data40 == "number") && (!(data40 % 1) && !isNaN(data40)))){const err83 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err83];}else {vErrors.push(err83);}errors++;}if(typeof data40 == "number"){if(data40 < 0 || isNaN(data40)){const err84 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err84];}else {vErrors.push(err84);}errors++;}}}if(data39.outputTokens !== undefined){let data41 = data39.outputTokens;if(!((typeof data41 == "number") && (!(data41 % 1) && !isNaN(data41)))){const err85 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err85];}else {vErrors.push(err85);}errors++;}if(typeof data41 == "number"){if(data41 < 0 || isNaN(data41)){const err86 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err86];}else {vErrors.push(err86);}errors++;}}}if(data39.totalTokens !== undefined){let data42 = data39.totalTokens;if(!((typeof data42 == "number") && (!(data42 % 1) && !isNaN(data42)))){const err87 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err87];}else {vErrors.push(err87);}errors++;}if(typeof data42 == "number"){if(data42 < 0 || isNaN(data42)){const err88 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err88];}else {vErrors.push(err88);}errors++;}}}if(data39.truncated !== undefined){if(typeof data39.truncated !== "boolean"){const err89 = {instancePath:instancePath+"/length/truncated",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err89];}else {vErrors.push(err89);}errors++;}}if(data39.truncateReason !== undefined){let data44 = data39.truncateReason;if(typeof data44 !== "string"){const err90 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err90];}else {vErrors.push(err90);}errors++;}if(!((((data44 === "budget_limit") || (data44 === "policy_limit")) || (data44 === "model_limit")) || (data44 === "none"))){const err91 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/enum",keyword:"enum",params:{allowedValues: schema39.properties.truncateReason.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err91];}else {vErrors.push(err91);}errors++;}}}else {const err92 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err92];}else {vErrors.push(err92);}errors++;}if(data39 && typeof data39 == "object" && !Array.isArray(data39)){if(data39.inputTokens === undefined){const err93 = {instancePath:instancePath+"/length",schemaPath:"#/properties/length/allOf/1/required",keyword:"required",params:{missingProperty: "inputTokens"},message:"must have required property '"+"inputTokens"+"'"};if(vErrors === null){vErrors = [err93];}else {vErrors.push(err93);}errors++;}if(data39.outputTokens === undefined){const err94 = {instancePath:instancePath+"/length",schemaPath:"#/properties/length/allOf/1/required",keyword:"required",params:{missingProperty: "outputTokens"},message:"must have required property '"+"outputTokens"+"'"};if(vErrors === null){vErrors = [err94];}else {vErrors.push(err94);}errors++;}}}}else {const err95 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err95];}else {vErrors.push(err95);}errors++;}validate20.errors = vErrors;return errors === 0;}validate20.evaluated = {"props":true,"dynamicProps":false,"dynamicItems":false};