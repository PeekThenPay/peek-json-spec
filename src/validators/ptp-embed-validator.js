"use strict";module.exports = validate20;module.exports.default = validate20;const schema31 = {"$schema":"https://json-schema.org/draft/2020-12/schema","title":"Peek-Then-Pay Embed Intent Response","description":"Numeric vector representations (embeddings) for a resource or its regions, with provenance and token accounting.","type":"object","properties":{"canonicalUrl":{"type":"string","format":"uri"},"language":{"type":"string","description":"BCP-47 tag of the source/selection (use \"und\" for non-linguistic media)."},"contentType":{"$ref":"common-defs.schema.json#/$defs/contentType"},"mediaType":{"$ref":"common-defs.schema.json#/$defs/mediaType"},"normalization":{"$ref":"common-defs.schema.json#/$defs/baseNormalization"},"provenance":{"allOf":[{"$ref":"common-defs.schema.json#/$defs/baseProvenance"},{"properties":{"vectorDimensions":{"type":"integer","minimum":1,"description":"Number of dimensions in embedding vectors"},"chunkingMethod":{"type":"string","enum":["doc","chunks","selection"],"description":"How source was partitioned for embedding"},"chunkSize":{"type":"integer","minimum":1,"description":"Size of chunks when chunking method is 'chunks'"},"chunkOverlap":{"type":"integer","minimum":0,"description":"Overlap between adjacent chunks"},"chunkUnit":{"type":"string","enum":["token","utf8","char"],"description":"Unit of measurement for chunk size"}},"required":["generatedAt","model","vectorDimensions","chunkingMethod"]}]},"embeddingMetadata":{"type":"object","description":"Global embedding configuration.","properties":{"dtype":{"type":"string","enum":["f32","f16","q8"]},"normalized":{"type":"boolean","description":"L2-normalized vectors."},"encode":{"type":"string","enum":["array","base64"],"default":"array"},"num_items":{"type":"integer","minimum":0}},"required":["dtype","encode"]},"length":{"$ref":"common-defs.schema.json#/$defs/baseLength"},"embeddings":{"type":"array","description":"Per-item vectors with source localization.","items":{"type":"object","properties":{"index":{"type":"integer","minimum":0},"embedding":{"description":"Vector as numeric array (present when encode=array).","type":"array","items":{"type":"number"},"minItems":1},"b64":{"description":"Base64-encoded vector bytes (present when encode=base64).","type":"string","contentEncoding":"base64"},"meta":{"type":"object","description":"Localizing metadata for this item.","properties":{"span":{"type":"object","properties":{"start":{"type":"integer","minimum":0},"end":{"type":"integer","minimum":0},"unit":{"type":"string","enum":["token","utf8","char"],"default":"token"}},"required":["start","end"],"additionalProperties":false},"selector":{"type":"string","description":"CSS selector / element id for region, if applicable."},"sectionId":{"type":"string"},"itemId":{"type":"string","description":"Stable publisher id for this block/asset."},"textHash":{"type":"string","description":"Hash of text span used to generate the vector."},"assetRef":{"type":"string","format":"uri","description":"For image/audio/video embeddings."},"language":{"type":"string","description":"Overrides global language if mixed."}},"additionalProperties":false}},"required":["index"],"additionalProperties":false}}},"required":["canonicalUrl","language","contentType","mediaType","embeddingMetadata","provenance","embeddings"],"additionalProperties":false,"allOf":[{"if":{"properties":{"embeddingMetadata":{"properties":{"encode":{"const":"array"}}}}},"then":{"properties":{"embeddings":{"items":{"required":["index","embedding"]}}}}},{"if":{"properties":{"embeddingMetadata":{"properties":{"encode":{"const":"base64"}}}}},"then":{"properties":{"embeddings":{"items":{"required":["index","b64"]}}}}}]};const schema33 = {"type":"string","description":"High-level classification for routing.","enum":["article","blog","doc","news","video","audio","dataset","other"]};const schema34 = {"type":"string","description":"MIME type of the resource.","anyOf":[{"enum":["text/html","text/markdown","text/plain","application/pdf","application/json","image/jpeg","image/png","audio/mpeg","video/mp4","application/octet-stream","unknown"]},{"pattern":"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"}]};const schema35 = {"type":"object","description":"Content cleaning and transformation tracking.","properties":{"htmlStripped":{"type":"boolean","default":false},"boilerplateRemoved":{"type":"boolean","default":false},"canonicalizedWhitespace":{"type":"boolean","default":false},"deduplicated":{"type":"boolean","default":false}},"additionalProperties":true};const schema38 = {"type":"object","description":"Token counting and truncation tracking for content delivery and billing.","properties":{"inputTokens":{"type":"integer","minimum":0,"description":"Tokens in the source content processed."},"outputTokens":{"type":"integer","minimum":0,"description":"Tokens delivered or generated in response."},"totalTokens":{"type":"integer","minimum":0,"description":"Total tokens processed (may equal input + output)."},"truncated":{"type":"boolean","default":false,"description":"Whether content was truncated due to limits."},"truncateReason":{"type":"string","enum":["budget_limit","policy_limit","model_limit","none"],"default":"none","description":"Reason for truncation if applicable."}},"additionalProperties":false};const func1 = Object.prototype.hasOwnProperty;const formats0 = require("ajv-formats/dist/formats").fullFormats.uri;const pattern4 = new RegExp("^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$", "u");const schema36 = {"type":"object","description":"Core provenance fields for content integrity, generation tracking, and attribution.","properties":{"contentHash":{"type":"string","description":"Stable hash of source content (e.g., sha256:...)."},"generatedAt":{"type":"string","format":"date-time","description":"Timestamp when the response was generated/computed."},"model":{"$ref":"#/$defs/modelMetadata","description":"Model used for content processing or generation."},"sourceUrl":{"type":"string","format":"uri","description":"Original URL where content was retrieved."},"sourceTitle":{"type":"string","description":"Title of the original source document."},"sourceAuthor":{"type":"string","description":"Author or creator of the original content."},"rights":{"type":"string","description":"Copyright or rights statement for the source content."},"attribution":{"type":"string","description":"Required attribution text or format."},"license":{"type":"string","description":"License identifier or URL for the source content."},"algorithm":{"type":"string","description":"Processing algorithm or method used for content transformation."},"confidence":{"type":"number","minimum":0,"maximum":1,"description":"Confidence score for generated or processed content."}},"required":["contentHash"]};const schema37 = {"type":"object","description":"Model information for AI-generated content.","properties":{"id":{"type":"string","description":"Model identifier"},"provider":{"type":"string","description":"Model provider (e.g., 'openai', 'anthropic', 'google', 'meta', 'mistral', 'cohere')"},"name":{"type":"string","description":"Model name"},"version":{"type":"string","description":"Model version"},"digest":{"type":"string","pattern":"^sha256:[a-fA-F0-9]{64}$","description":"SHA256 digest of model"}},"required":["id","provider","name","version","digest"],"additionalProperties":false};const formats2 = require("ajv-formats/dist/formats").fullFormats["date-time"];const pattern5 = new RegExp("^sha256:[a-fA-F0-9]{64}$", "u");function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate22.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.contentHash === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "contentHash"},message:"must have required property '"+"contentHash"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.contentHash !== undefined){if(typeof data.contentHash !== "string"){const err1 = {instancePath:instancePath+"/contentHash",schemaPath:"#/properties/contentHash/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}if(data.generatedAt !== undefined){let data1 = data.generatedAt;if(typeof data1 === "string"){if(!(formats2.validate(data1))){const err2 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}else {const err3 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}if(data.model !== undefined){let data2 = data.model;if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.id === undefined){const err4 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data2.provider === undefined){const err5 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "provider"},message:"must have required property '"+"provider"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data2.name === undefined){const err6 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(data2.version === undefined){const err7 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "version"},message:"must have required property '"+"version"+"'"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}if(data2.digest === undefined){const err8 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "digest"},message:"must have required property '"+"digest"+"'"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}for(const key0 in data2){if(!(((((key0 === "id") || (key0 === "provider")) || (key0 === "name")) || (key0 === "version")) || (key0 === "digest"))){const err9 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}if(data2.id !== undefined){if(typeof data2.id !== "string"){const err10 = {instancePath:instancePath+"/model/id",schemaPath:"#/$defs/modelMetadata/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data2.provider !== undefined){if(typeof data2.provider !== "string"){const err11 = {instancePath:instancePath+"/model/provider",schemaPath:"#/$defs/modelMetadata/properties/provider/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}if(data2.name !== undefined){if(typeof data2.name !== "string"){const err12 = {instancePath:instancePath+"/model/name",schemaPath:"#/$defs/modelMetadata/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}if(data2.version !== undefined){if(typeof data2.version !== "string"){const err13 = {instancePath:instancePath+"/model/version",schemaPath:"#/$defs/modelMetadata/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}}if(data2.digest !== undefined){let data7 = data2.digest;if(typeof data7 === "string"){if(!pattern5.test(data7)){const err14 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/pattern",keyword:"pattern",params:{pattern: "^sha256:[a-fA-F0-9]{64}$"},message:"must match pattern \""+"^sha256:[a-fA-F0-9]{64}$"+"\""};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}else {const err15 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}}else {const err16 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}if(data.sourceUrl !== undefined){let data8 = data.sourceUrl;if(typeof data8 === "string"){if(!(formats0(data8))){const err17 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}else {const err18 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}if(data.sourceTitle !== undefined){if(typeof data.sourceTitle !== "string"){const err19 = {instancePath:instancePath+"/sourceTitle",schemaPath:"#/properties/sourceTitle/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}if(data.sourceAuthor !== undefined){if(typeof data.sourceAuthor !== "string"){const err20 = {instancePath:instancePath+"/sourceAuthor",schemaPath:"#/properties/sourceAuthor/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}if(data.rights !== undefined){if(typeof data.rights !== "string"){const err21 = {instancePath:instancePath+"/rights",schemaPath:"#/properties/rights/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}if(data.attribution !== undefined){if(typeof data.attribution !== "string"){const err22 = {instancePath:instancePath+"/attribution",schemaPath:"#/properties/attribution/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}if(data.license !== undefined){if(typeof data.license !== "string"){const err23 = {instancePath:instancePath+"/license",schemaPath:"#/properties/license/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}if(data.algorithm !== undefined){if(typeof data.algorithm !== "string"){const err24 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data.confidence !== undefined){let data15 = data.confidence;if(typeof data15 == "number"){if(data15 > 1 || isNaN(data15)){const err25 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}if(data15 < 0 || isNaN(data15)){const err26 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}else {const err27 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}}else {const err28 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}validate22.errors = vErrors;return errors === 0;}validate22.evaluated = {"props":{"contentHash":true,"generatedAt":true,"model":true,"sourceUrl":true,"sourceTitle":true,"sourceAuthor":true,"rights":true,"attribution":true,"license":true,"algorithm":true,"confidence":true},"dynamicProps":false,"dynamicItems":false};function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate20.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}const _errs2 = errors;let valid1 = true;const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.embeddingMetadata !== undefined){let data0 = data.embeddingMetadata;if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.encode !== undefined){if("array" !== data0.encode){const err0 = {};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}}}}var _valid0 = _errs3 === errors;errors = _errs2;if(vErrors !== null){if(_errs2){vErrors.length = _errs2;}else {vErrors = null;}}if(_valid0){const _errs6 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.embeddings !== undefined){let data2 = data.embeddings;if(Array.isArray(data2)){const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];if(data3 && typeof data3 == "object" && !Array.isArray(data3)){if(data3.index === undefined){const err1 = {instancePath:instancePath+"/embeddings/" + i0,schemaPath:"#/allOf/0/then/properties/embeddings/items/required",keyword:"required",params:{missingProperty: "index"},message:"must have required property '"+"index"+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data3.embedding === undefined){const err2 = {instancePath:instancePath+"/embeddings/" + i0,schemaPath:"#/allOf/0/then/properties/embeddings/items/required",keyword:"required",params:{missingProperty: "embedding"},message:"must have required property '"+"embedding"+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}}}}}var _valid0 = _errs6 === errors;valid1 = _valid0;if(valid1){var props0 = {};props0.embeddings = true;props0.embeddingMetadata = true;}}if(!valid1){const err3 = {instancePath,schemaPath:"#/allOf/0/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}const _errs10 = errors;let valid7 = true;const _errs11 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.embeddingMetadata !== undefined){let data4 = data.embeddingMetadata;if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.encode !== undefined){if("base64" !== data4.encode){const err4 = {};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}}}}var _valid1 = _errs11 === errors;errors = _errs10;if(vErrors !== null){if(_errs10){vErrors.length = _errs10;}else {vErrors = null;}}if(_valid1){const _errs14 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.embeddings !== undefined){let data6 = data.embeddings;if(Array.isArray(data6)){const len1 = data6.length;for(let i1=0; i1<len1; i1++){let data7 = data6[i1];if(data7 && typeof data7 == "object" && !Array.isArray(data7)){if(data7.index === undefined){const err5 = {instancePath:instancePath+"/embeddings/" + i1,schemaPath:"#/allOf/1/then/properties/embeddings/items/required",keyword:"required",params:{missingProperty: "index"},message:"must have required property '"+"index"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data7.b64 === undefined){const err6 = {instancePath:instancePath+"/embeddings/" + i1,schemaPath:"#/allOf/1/then/properties/embeddings/items/required",keyword:"required",params:{missingProperty: "b64"},message:"must have required property '"+"b64"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}}}}}var _valid1 = _errs14 === errors;valid7 = _valid1;if(valid7){var props1 = {};props1.embeddings = true;props1.embeddingMetadata = true;}}if(!valid7){const err7 = {instancePath,schemaPath:"#/allOf/1/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}if(props0 !== true && props1 !== undefined){if(props1 === true){props0 = true;}else {props0 = props0 || {};Object.assign(props0, props1);}}if(data && typeof data == "object" && !Array.isArray(data)){if(data.canonicalUrl === undefined){const err8 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "canonicalUrl"},message:"must have required property '"+"canonicalUrl"+"'"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}if(data.language === undefined){const err9 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "language"},message:"must have required property '"+"language"+"'"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}if(data.contentType === undefined){const err10 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "contentType"},message:"must have required property '"+"contentType"+"'"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}if(data.mediaType === undefined){const err11 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "mediaType"},message:"must have required property '"+"mediaType"+"'"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}if(data.embeddingMetadata === undefined){const err12 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "embeddingMetadata"},message:"must have required property '"+"embeddingMetadata"+"'"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}if(data.provenance === undefined){const err13 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "provenance"},message:"must have required property '"+"provenance"+"'"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}if(data.embeddings === undefined){const err14 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "embeddings"},message:"must have required property '"+"embeddings"+"'"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}for(const key0 in data){if(!(func1.call(schema31.properties, key0))){const err15 = {instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}if(data.canonicalUrl !== undefined){let data8 = data.canonicalUrl;if(typeof data8 === "string"){if(!(formats0(data8))){const err16 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}else {const err17 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}if(data.language !== undefined){if(typeof data.language !== "string"){const err18 = {instancePath:instancePath+"/language",schemaPath:"#/properties/language/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}if(data.contentType !== undefined){let data10 = data.contentType;if(typeof data10 !== "string"){const err19 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}if(!((((((((data10 === "article") || (data10 === "blog")) || (data10 === "doc")) || (data10 === "news")) || (data10 === "video")) || (data10 === "audio")) || (data10 === "dataset")) || (data10 === "other"))){const err20 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/enum",keyword:"enum",params:{allowedValues: schema33.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}if(data.mediaType !== undefined){let data11 = data.mediaType;if(typeof data11 !== "string"){const err21 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}const _errs28 = errors;let valid16 = false;const _errs29 = errors;if(!(((((((((((data11 === "text/html") || (data11 === "text/markdown")) || (data11 === "text/plain")) || (data11 === "application/pdf")) || (data11 === "application/json")) || (data11 === "image/jpeg")) || (data11 === "image/png")) || (data11 === "audio/mpeg")) || (data11 === "video/mp4")) || (data11 === "application/octet-stream")) || (data11 === "unknown"))){const err22 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/0/enum",keyword:"enum",params:{allowedValues: schema34.anyOf[0].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}var _valid2 = _errs29 === errors;valid16 = valid16 || _valid2;const _errs30 = errors;if(typeof data11 === "string"){if(!pattern4.test(data11)){const err23 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/1/pattern",keyword:"pattern",params:{pattern: "^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"},message:"must match pattern \""+"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"+"\""};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}var _valid2 = _errs30 === errors;valid16 = valid16 || _valid2;if(!valid16){const err24 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}else {errors = _errs28;if(vErrors !== null){if(_errs28){vErrors.length = _errs28;}else {vErrors = null;}}}}if(data.normalization !== undefined){let data12 = data.normalization;if(data12 && typeof data12 == "object" && !Array.isArray(data12)){if(data12.htmlStripped !== undefined){if(typeof data12.htmlStripped !== "boolean"){const err25 = {instancePath:instancePath+"/normalization/htmlStripped",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/htmlStripped/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}}if(data12.boilerplateRemoved !== undefined){if(typeof data12.boilerplateRemoved !== "boolean"){const err26 = {instancePath:instancePath+"/normalization/boilerplateRemoved",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/boilerplateRemoved/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}if(data12.canonicalizedWhitespace !== undefined){if(typeof data12.canonicalizedWhitespace !== "boolean"){const err27 = {instancePath:instancePath+"/normalization/canonicalizedWhitespace",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/canonicalizedWhitespace/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}if(data12.deduplicated !== undefined){if(typeof data12.deduplicated !== "boolean"){const err28 = {instancePath:instancePath+"/normalization/deduplicated",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/properties/deduplicated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}}}else {const err29 = {instancePath:instancePath+"/normalization",schemaPath:"common-defs.schema.json#/$defs/baseNormalization/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}}if(data.provenance !== undefined){let data17 = data.provenance;if(!(validate22(data17, {instancePath:instancePath+"/provenance",parentData:data,parentDataProperty:"provenance",rootData,dynamicAnchors}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}if(data17 && typeof data17 == "object" && !Array.isArray(data17)){if(data17.generatedAt === undefined){const err30 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "generatedAt"},message:"must have required property '"+"generatedAt"+"'"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}if(data17.model === undefined){const err31 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "model"},message:"must have required property '"+"model"+"'"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}if(data17.vectorDimensions === undefined){const err32 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "vectorDimensions"},message:"must have required property '"+"vectorDimensions"+"'"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}if(data17.chunkingMethod === undefined){const err33 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "chunkingMethod"},message:"must have required property '"+"chunkingMethod"+"'"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}if(data17.vectorDimensions !== undefined){let data18 = data17.vectorDimensions;if(!((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18)))){const err34 = {instancePath:instancePath+"/provenance/vectorDimensions",schemaPath:"#/properties/provenance/allOf/1/properties/vectorDimensions/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}if(typeof data18 == "number"){if(data18 < 1 || isNaN(data18)){const err35 = {instancePath:instancePath+"/provenance/vectorDimensions",schemaPath:"#/properties/provenance/allOf/1/properties/vectorDimensions/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}}if(data17.chunkingMethod !== undefined){let data19 = data17.chunkingMethod;if(typeof data19 !== "string"){const err36 = {instancePath:instancePath+"/provenance/chunkingMethod",schemaPath:"#/properties/provenance/allOf/1/properties/chunkingMethod/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}if(!(((data19 === "doc") || (data19 === "chunks")) || (data19 === "selection"))){const err37 = {instancePath:instancePath+"/provenance/chunkingMethod",schemaPath:"#/properties/provenance/allOf/1/properties/chunkingMethod/enum",keyword:"enum",params:{allowedValues: schema31.properties.provenance.allOf[1].properties.chunkingMethod.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}}if(data17.chunkSize !== undefined){let data20 = data17.chunkSize;if(!((typeof data20 == "number") && (!(data20 % 1) && !isNaN(data20)))){const err38 = {instancePath:instancePath+"/provenance/chunkSize",schemaPath:"#/properties/provenance/allOf/1/properties/chunkSize/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}if(typeof data20 == "number"){if(data20 < 1 || isNaN(data20)){const err39 = {instancePath:instancePath+"/provenance/chunkSize",schemaPath:"#/properties/provenance/allOf/1/properties/chunkSize/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}}}if(data17.chunkOverlap !== undefined){let data21 = data17.chunkOverlap;if(!((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21)))){const err40 = {instancePath:instancePath+"/provenance/chunkOverlap",schemaPath:"#/properties/provenance/allOf/1/properties/chunkOverlap/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}if(typeof data21 == "number"){if(data21 < 0 || isNaN(data21)){const err41 = {instancePath:instancePath+"/provenance/chunkOverlap",schemaPath:"#/properties/provenance/allOf/1/properties/chunkOverlap/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}}}if(data17.chunkUnit !== undefined){let data22 = data17.chunkUnit;if(typeof data22 !== "string"){const err42 = {instancePath:instancePath+"/provenance/chunkUnit",schemaPath:"#/properties/provenance/allOf/1/properties/chunkUnit/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}if(!(((data22 === "token") || (data22 === "utf8")) || (data22 === "char"))){const err43 = {instancePath:instancePath+"/provenance/chunkUnit",schemaPath:"#/properties/provenance/allOf/1/properties/chunkUnit/enum",keyword:"enum",params:{allowedValues: schema31.properties.provenance.allOf[1].properties.chunkUnit.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}}}}if(data.embeddingMetadata !== undefined){let data23 = data.embeddingMetadata;if(data23 && typeof data23 == "object" && !Array.isArray(data23)){if(data23.dtype === undefined){const err44 = {instancePath:instancePath+"/embeddingMetadata",schemaPath:"#/properties/embeddingMetadata/required",keyword:"required",params:{missingProperty: "dtype"},message:"must have required property '"+"dtype"+"'"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}if(data23.encode === undefined){const err45 = {instancePath:instancePath+"/embeddingMetadata",schemaPath:"#/properties/embeddingMetadata/required",keyword:"required",params:{missingProperty: "encode"},message:"must have required property '"+"encode"+"'"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}if(data23.dtype !== undefined){let data24 = data23.dtype;if(typeof data24 !== "string"){const err46 = {instancePath:instancePath+"/embeddingMetadata/dtype",schemaPath:"#/properties/embeddingMetadata/properties/dtype/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}if(!(((data24 === "f32") || (data24 === "f16")) || (data24 === "q8"))){const err47 = {instancePath:instancePath+"/embeddingMetadata/dtype",schemaPath:"#/properties/embeddingMetadata/properties/dtype/enum",keyword:"enum",params:{allowedValues: schema31.properties.embeddingMetadata.properties.dtype.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}}if(data23.normalized !== undefined){if(typeof data23.normalized !== "boolean"){const err48 = {instancePath:instancePath+"/embeddingMetadata/normalized",schemaPath:"#/properties/embeddingMetadata/properties/normalized/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}}if(data23.encode !== undefined){let data26 = data23.encode;if(typeof data26 !== "string"){const err49 = {instancePath:instancePath+"/embeddingMetadata/encode",schemaPath:"#/properties/embeddingMetadata/properties/encode/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err49];}else {vErrors.push(err49);}errors++;}if(!((data26 === "array") || (data26 === "base64"))){const err50 = {instancePath:instancePath+"/embeddingMetadata/encode",schemaPath:"#/properties/embeddingMetadata/properties/encode/enum",keyword:"enum",params:{allowedValues: schema31.properties.embeddingMetadata.properties.encode.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}}if(data23.num_items !== undefined){let data27 = data23.num_items;if(!((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27)))){const err51 = {instancePath:instancePath+"/embeddingMetadata/num_items",schemaPath:"#/properties/embeddingMetadata/properties/num_items/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}if(typeof data27 == "number"){if(data27 < 0 || isNaN(data27)){const err52 = {instancePath:instancePath+"/embeddingMetadata/num_items",schemaPath:"#/properties/embeddingMetadata/properties/num_items/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}}}}else {const err53 = {instancePath:instancePath+"/embeddingMetadata",schemaPath:"#/properties/embeddingMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}}if(data.length !== undefined){let data28 = data.length;if(data28 && typeof data28 == "object" && !Array.isArray(data28)){for(const key1 in data28){if(!(((((key1 === "inputTokens") || (key1 === "outputTokens")) || (key1 === "totalTokens")) || (key1 === "truncated")) || (key1 === "truncateReason"))){const err54 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}}if(data28.inputTokens !== undefined){let data29 = data28.inputTokens;if(!((typeof data29 == "number") && (!(data29 % 1) && !isNaN(data29)))){const err55 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}if(typeof data29 == "number"){if(data29 < 0 || isNaN(data29)){const err56 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}}}if(data28.outputTokens !== undefined){let data30 = data28.outputTokens;if(!((typeof data30 == "number") && (!(data30 % 1) && !isNaN(data30)))){const err57 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}if(typeof data30 == "number"){if(data30 < 0 || isNaN(data30)){const err58 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}}}if(data28.totalTokens !== undefined){let data31 = data28.totalTokens;if(!((typeof data31 == "number") && (!(data31 % 1) && !isNaN(data31)))){const err59 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}if(typeof data31 == "number"){if(data31 < 0 || isNaN(data31)){const err60 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}}}if(data28.truncated !== undefined){if(typeof data28.truncated !== "boolean"){const err61 = {instancePath:instancePath+"/length/truncated",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}}if(data28.truncateReason !== undefined){let data33 = data28.truncateReason;if(typeof data33 !== "string"){const err62 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err62];}else {vErrors.push(err62);}errors++;}if(!((((data33 === "budget_limit") || (data33 === "policy_limit")) || (data33 === "model_limit")) || (data33 === "none"))){const err63 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/enum",keyword:"enum",params:{allowedValues: schema38.properties.truncateReason.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}}}else {const err64 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err64];}else {vErrors.push(err64);}errors++;}}if(data.embeddings !== undefined){let data34 = data.embeddings;if(Array.isArray(data34)){const len2 = data34.length;for(let i2=0; i2<len2; i2++){let data35 = data34[i2];if(data35 && typeof data35 == "object" && !Array.isArray(data35)){if(data35.index === undefined){const err65 = {instancePath:instancePath+"/embeddings/" + i2,schemaPath:"#/properties/embeddings/items/required",keyword:"required",params:{missingProperty: "index"},message:"must have required property '"+"index"+"'"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}for(const key2 in data35){if(!((((key2 === "index") || (key2 === "embedding")) || (key2 === "b64")) || (key2 === "meta"))){const err66 = {instancePath:instancePath+"/embeddings/" + i2,schemaPath:"#/properties/embeddings/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}}if(data35.index !== undefined){let data36 = data35.index;if(!((typeof data36 == "number") && (!(data36 % 1) && !isNaN(data36)))){const err67 = {instancePath:instancePath+"/embeddings/" + i2+"/index",schemaPath:"#/properties/embeddings/items/properties/index/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}if(typeof data36 == "number"){if(data36 < 0 || isNaN(data36)){const err68 = {instancePath:instancePath+"/embeddings/" + i2+"/index",schemaPath:"#/properties/embeddings/items/properties/index/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}}}if(data35.embedding !== undefined){let data37 = data35.embedding;if(Array.isArray(data37)){if(data37.length < 1){const err69 = {instancePath:instancePath+"/embeddings/" + i2+"/embedding",schemaPath:"#/properties/embeddings/items/properties/embedding/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}const len3 = data37.length;for(let i3=0; i3<len3; i3++){if(!(typeof data37[i3] == "number")){const err70 = {instancePath:instancePath+"/embeddings/" + i2+"/embedding/" + i3,schemaPath:"#/properties/embeddings/items/properties/embedding/items/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}}}else {const err71 = {instancePath:instancePath+"/embeddings/" + i2+"/embedding",schemaPath:"#/properties/embeddings/items/properties/embedding/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}}if(data35.b64 !== undefined){if(typeof data35.b64 !== "string"){const err72 = {instancePath:instancePath+"/embeddings/" + i2+"/b64",schemaPath:"#/properties/embeddings/items/properties/b64/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}}if(data35.meta !== undefined){let data40 = data35.meta;if(data40 && typeof data40 == "object" && !Array.isArray(data40)){for(const key3 in data40){if(!(((((((key3 === "span") || (key3 === "selector")) || (key3 === "sectionId")) || (key3 === "itemId")) || (key3 === "textHash")) || (key3 === "assetRef")) || (key3 === "language"))){const err73 = {instancePath:instancePath+"/embeddings/" + i2+"/meta",schemaPath:"#/properties/embeddings/items/properties/meta/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err73];}else {vErrors.push(err73);}errors++;}}if(data40.span !== undefined){let data41 = data40.span;if(data41 && typeof data41 == "object" && !Array.isArray(data41)){if(data41.start === undefined){const err74 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/required",keyword:"required",params:{missingProperty: "start"},message:"must have required property '"+"start"+"'"};if(vErrors === null){vErrors = [err74];}else {vErrors.push(err74);}errors++;}if(data41.end === undefined){const err75 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/required",keyword:"required",params:{missingProperty: "end"},message:"must have required property '"+"end"+"'"};if(vErrors === null){vErrors = [err75];}else {vErrors.push(err75);}errors++;}for(const key4 in data41){if(!(((key4 === "start") || (key4 === "end")) || (key4 === "unit"))){const err76 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err76];}else {vErrors.push(err76);}errors++;}}if(data41.start !== undefined){let data42 = data41.start;if(!((typeof data42 == "number") && (!(data42 % 1) && !isNaN(data42)))){const err77 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span/start",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/properties/start/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err77];}else {vErrors.push(err77);}errors++;}if(typeof data42 == "number"){if(data42 < 0 || isNaN(data42)){const err78 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span/start",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/properties/start/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err78];}else {vErrors.push(err78);}errors++;}}}if(data41.end !== undefined){let data43 = data41.end;if(!((typeof data43 == "number") && (!(data43 % 1) && !isNaN(data43)))){const err79 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span/end",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/properties/end/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err79];}else {vErrors.push(err79);}errors++;}if(typeof data43 == "number"){if(data43 < 0 || isNaN(data43)){const err80 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span/end",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/properties/end/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err80];}else {vErrors.push(err80);}errors++;}}}if(data41.unit !== undefined){let data44 = data41.unit;if(typeof data44 !== "string"){const err81 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span/unit",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/properties/unit/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err81];}else {vErrors.push(err81);}errors++;}if(!(((data44 === "token") || (data44 === "utf8")) || (data44 === "char"))){const err82 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span/unit",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/properties/unit/enum",keyword:"enum",params:{allowedValues: schema31.properties.embeddings.items.properties.meta.properties.span.properties.unit.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err82];}else {vErrors.push(err82);}errors++;}}}else {const err83 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/span",schemaPath:"#/properties/embeddings/items/properties/meta/properties/span/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err83];}else {vErrors.push(err83);}errors++;}}if(data40.selector !== undefined){if(typeof data40.selector !== "string"){const err84 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/selector",schemaPath:"#/properties/embeddings/items/properties/meta/properties/selector/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err84];}else {vErrors.push(err84);}errors++;}}if(data40.sectionId !== undefined){if(typeof data40.sectionId !== "string"){const err85 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/sectionId",schemaPath:"#/properties/embeddings/items/properties/meta/properties/sectionId/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err85];}else {vErrors.push(err85);}errors++;}}if(data40.itemId !== undefined){if(typeof data40.itemId !== "string"){const err86 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/itemId",schemaPath:"#/properties/embeddings/items/properties/meta/properties/itemId/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err86];}else {vErrors.push(err86);}errors++;}}if(data40.textHash !== undefined){if(typeof data40.textHash !== "string"){const err87 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/textHash",schemaPath:"#/properties/embeddings/items/properties/meta/properties/textHash/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err87];}else {vErrors.push(err87);}errors++;}}if(data40.assetRef !== undefined){let data49 = data40.assetRef;if(typeof data49 === "string"){if(!(formats0(data49))){const err88 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/assetRef",schemaPath:"#/properties/embeddings/items/properties/meta/properties/assetRef/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err88];}else {vErrors.push(err88);}errors++;}}else {const err89 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/assetRef",schemaPath:"#/properties/embeddings/items/properties/meta/properties/assetRef/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err89];}else {vErrors.push(err89);}errors++;}}if(data40.language !== undefined){if(typeof data40.language !== "string"){const err90 = {instancePath:instancePath+"/embeddings/" + i2+"/meta/language",schemaPath:"#/properties/embeddings/items/properties/meta/properties/language/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err90];}else {vErrors.push(err90);}errors++;}}}else {const err91 = {instancePath:instancePath+"/embeddings/" + i2+"/meta",schemaPath:"#/properties/embeddings/items/properties/meta/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err91];}else {vErrors.push(err91);}errors++;}}}else {const err92 = {instancePath:instancePath+"/embeddings/" + i2,schemaPath:"#/properties/embeddings/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err92];}else {vErrors.push(err92);}errors++;}}}else {const err93 = {instancePath:instancePath+"/embeddings",schemaPath:"#/properties/embeddings/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err93];}else {vErrors.push(err93);}errors++;}}}else {const err94 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err94];}else {vErrors.push(err94);}errors++;}validate20.errors = vErrors;return errors === 0;}validate20.evaluated = {"props":true,"dynamicProps":false,"dynamicItems":false};