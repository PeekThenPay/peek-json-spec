import { fullFormats } from "ajv-formats/dist/formats";
export default validate20;const schema31 = {"$schema":"https://json-schema.org/draft/2020-12/schema","title":"Peek-Then-Pay QA Intent Response","description":"Structured questionâ€“answer pairs derived from a resource, with confidence and provenance.","type":"object","properties":{"canonicalUrl":{"type":"string","format":"uri"},"language":{"type":"string","description":"BCP-47 language of the source"},"contentType":{"$ref":"common-defs.schema.json#/$defs/contentType"},"mediaType":{"$ref":"common-defs.schema.json#/$defs/mediaType"},"model":{"$ref":"common-defs.schema.json#/$defs/modelMetadata"},"qa_pairs":{"type":"array","description":"Structured answers to each question.","items":{"type":"object","properties":{"index":{"type":"integer","minimum":0},"question":{"type":"string"},"answer":{"type":"string"},"confidence":{"type":"number","minimum":0,"maximum":1},"unanswered":{"type":"boolean","default":false},"answerType":{"type":"string","enum":["factual","analytical","summative","definition","other"]},"sources":{"type":"array","items":{"type":"object","properties":{"canonicalUrl":{"type":"string","format":"uri"},"span":{"type":"object","properties":{"start":{"type":"integer"},"end":{"type":"integer"},"unit":{"type":"string","enum":["token","char"],"default":"char"}},"required":["start","end"]},"quote":{"type":"string","maxLength":300}},"required":["canonicalUrl"]}}},"required":["index","question"],"additionalProperties":false}},"provenance":{"allOf":[{"$ref":"common-defs.schema.json#/$defs/baseProvenance"},{"required":["generatedAt"]}]},"length":{"allOf":[{"$ref":"common-defs.schema.json#/$defs/baseLength"},{"required":["inputTokens","outputTokens"]}]}},"required":["canonicalUrl","language","model","qa_pairs","provenance","length"],"additionalProperties":false};const schema33 = {"type":"string","description":"High-level classification for routing.","enum":["article","blog","doc","news","video","audio","dataset","other"]};const schema34 = {"type":"string","description":"MIME type of the resource.","anyOf":[{"enum":["text/html","text/markdown","text/plain","application/pdf","application/json","image/jpeg","image/png","audio/mpeg","video/mp4","application/octet-stream","unknown"]},{"pattern":"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"}]};const schema35 = {"type":"object","description":"Model information for AI-generated content.","properties":{"id":{"type":"string","description":"Model identifier"},"provider":{"type":"string","description":"Model provider (e.g., 'openai', 'anthropic', 'google', 'meta', 'mistral', 'cohere')"},"name":{"type":"string","description":"Model name"},"version":{"type":"string","description":"Model version"},"digest":{"type":"string","pattern":"^sha256:[a-fA-F0-9]{64}$","description":"SHA256 digest of model"}},"required":["id","provider","name","version","digest"],"additionalProperties":false};const schema38 = {"type":"object","description":"Token counting and truncation tracking for content delivery and billing.","properties":{"inputTokens":{"type":"integer","minimum":0,"description":"Tokens in the source content processed."},"outputTokens":{"type":"integer","minimum":0,"description":"Tokens delivered or generated in response."},"totalTokens":{"type":"integer","minimum":0,"description":"Total tokens processed (may equal input + output)."},"truncated":{"type":"boolean","default":false,"description":"Whether content was truncated due to limits."},"truncateReason":{"type":"string","enum":["budget_limit","policy_limit","model_limit","none"],"default":"none","description":"Reason for truncation if applicable."}},"additionalProperties":false};const formats0 = fullFormats.uri;const pattern4 = new RegExp("^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$", "u");const pattern5 = new RegExp("^sha256:[a-fA-F0-9]{64}$", "u");const func1 = require("ajv/dist/runtime/ucs2length").default;const schema36 = {"type":"object","description":"Core provenance fields for content integrity, generation tracking, and attribution.","properties":{"contentHash":{"type":"string","description":"Stable hash of source content (e.g., sha256:...)."},"generatedAt":{"type":"string","format":"date-time","description":"Timestamp when the response was generated/computed."},"model":{"$ref":"#/$defs/modelMetadata","description":"Model used for content processing or generation."},"sourceUrl":{"type":"string","format":"uri","description":"Original URL where content was retrieved."},"sourceTitle":{"type":"string","description":"Title of the original source document."},"sourceAuthor":{"type":"string","description":"Author or creator of the original content."},"rights":{"type":"string","description":"Copyright or rights statement for the source content."},"attribution":{"type":"string","description":"Required attribution text or format."},"license":{"type":"string","description":"License identifier or URL for the source content."},"algorithm":{"type":"string","description":"Processing algorithm or method used for content transformation."},"confidence":{"type":"number","minimum":0,"maximum":1,"description":"Confidence score for generated or processed content."}},"required":["contentHash"]};const formats4 = fullFormats["date-time"];function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate22.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.contentHash === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "contentHash"},message:"must have required property '"+"contentHash"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.contentHash !== undefined){if(typeof data.contentHash !== "string"){const err1 = {instancePath:instancePath+"/contentHash",schemaPath:"#/properties/contentHash/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}if(data.generatedAt !== undefined){let data1 = data.generatedAt;if(typeof data1 === "string"){if(!(formats4.validate(data1))){const err2 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}else {const err3 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}if(data.model !== undefined){let data2 = data.model;if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.id === undefined){const err4 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data2.provider === undefined){const err5 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "provider"},message:"must have required property '"+"provider"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data2.name === undefined){const err6 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(data2.version === undefined){const err7 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "version"},message:"must have required property '"+"version"+"'"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}if(data2.digest === undefined){const err8 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "digest"},message:"must have required property '"+"digest"+"'"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}for(const key0 in data2){if(!(((((key0 === "id") || (key0 === "provider")) || (key0 === "name")) || (key0 === "version")) || (key0 === "digest"))){const err9 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}if(data2.id !== undefined){if(typeof data2.id !== "string"){const err10 = {instancePath:instancePath+"/model/id",schemaPath:"#/$defs/modelMetadata/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data2.provider !== undefined){if(typeof data2.provider !== "string"){const err11 = {instancePath:instancePath+"/model/provider",schemaPath:"#/$defs/modelMetadata/properties/provider/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}if(data2.name !== undefined){if(typeof data2.name !== "string"){const err12 = {instancePath:instancePath+"/model/name",schemaPath:"#/$defs/modelMetadata/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}if(data2.version !== undefined){if(typeof data2.version !== "string"){const err13 = {instancePath:instancePath+"/model/version",schemaPath:"#/$defs/modelMetadata/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}}if(data2.digest !== undefined){let data7 = data2.digest;if(typeof data7 === "string"){if(!pattern5.test(data7)){const err14 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/pattern",keyword:"pattern",params:{pattern: "^sha256:[a-fA-F0-9]{64}$"},message:"must match pattern \""+"^sha256:[a-fA-F0-9]{64}$"+"\""};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}else {const err15 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}}else {const err16 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}if(data.sourceUrl !== undefined){let data8 = data.sourceUrl;if(typeof data8 === "string"){if(!(formats0(data8))){const err17 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}else {const err18 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}if(data.sourceTitle !== undefined){if(typeof data.sourceTitle !== "string"){const err19 = {instancePath:instancePath+"/sourceTitle",schemaPath:"#/properties/sourceTitle/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}if(data.sourceAuthor !== undefined){if(typeof data.sourceAuthor !== "string"){const err20 = {instancePath:instancePath+"/sourceAuthor",schemaPath:"#/properties/sourceAuthor/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}if(data.rights !== undefined){if(typeof data.rights !== "string"){const err21 = {instancePath:instancePath+"/rights",schemaPath:"#/properties/rights/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}if(data.attribution !== undefined){if(typeof data.attribution !== "string"){const err22 = {instancePath:instancePath+"/attribution",schemaPath:"#/properties/attribution/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}if(data.license !== undefined){if(typeof data.license !== "string"){const err23 = {instancePath:instancePath+"/license",schemaPath:"#/properties/license/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}if(data.algorithm !== undefined){if(typeof data.algorithm !== "string"){const err24 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data.confidence !== undefined){let data15 = data.confidence;if(typeof data15 == "number"){if(data15 > 1 || isNaN(data15)){const err25 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}if(data15 < 0 || isNaN(data15)){const err26 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}else {const err27 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}}else {const err28 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}validate22.errors = vErrors;return errors === 0;}validate22.evaluated = {"props":{"contentHash":true,"generatedAt":true,"model":true,"sourceUrl":true,"sourceTitle":true,"sourceAuthor":true,"rights":true,"attribution":true,"license":true,"algorithm":true,"confidence":true},"dynamicProps":false,"dynamicItems":false};function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate20.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.canonicalUrl === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "canonicalUrl"},message:"must have required property '"+"canonicalUrl"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.language === undefined){const err1 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "language"},message:"must have required property '"+"language"+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.model === undefined){const err2 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "model"},message:"must have required property '"+"model"+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}if(data.qa_pairs === undefined){const err3 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "qa_pairs"},message:"must have required property '"+"qa_pairs"+"'"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(data.provenance === undefined){const err4 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "provenance"},message:"must have required property '"+"provenance"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data.length === undefined){const err5 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "length"},message:"must have required property '"+"length"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}for(const key0 in data){if(!((((((((key0 === "canonicalUrl") || (key0 === "language")) || (key0 === "contentType")) || (key0 === "mediaType")) || (key0 === "model")) || (key0 === "qa_pairs")) || (key0 === "provenance")) || (key0 === "length"))){const err6 = {instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}if(data.canonicalUrl !== undefined){let data0 = data.canonicalUrl;if(typeof data0 === "string"){if(!(formats0(data0))){const err7 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}else {const err8 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}if(data.language !== undefined){if(typeof data.language !== "string"){const err9 = {instancePath:instancePath+"/language",schemaPath:"#/properties/language/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}if(data.contentType !== undefined){let data2 = data.contentType;if(typeof data2 !== "string"){const err10 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}if(!((((((((data2 === "article") || (data2 === "blog")) || (data2 === "doc")) || (data2 === "news")) || (data2 === "video")) || (data2 === "audio")) || (data2 === "dataset")) || (data2 === "other"))){const err11 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/enum",keyword:"enum",params:{allowedValues: schema33.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}if(data.mediaType !== undefined){let data3 = data.mediaType;if(typeof data3 !== "string"){const err12 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}const _errs12 = errors;let valid3 = false;const _errs13 = errors;if(!(((((((((((data3 === "text/html") || (data3 === "text/markdown")) || (data3 === "text/plain")) || (data3 === "application/pdf")) || (data3 === "application/json")) || (data3 === "image/jpeg")) || (data3 === "image/png")) || (data3 === "audio/mpeg")) || (data3 === "video/mp4")) || (data3 === "application/octet-stream")) || (data3 === "unknown"))){const err13 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/0/enum",keyword:"enum",params:{allowedValues: schema34.anyOf[0].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}var _valid0 = _errs13 === errors;valid3 = valid3 || _valid0;const _errs14 = errors;if(typeof data3 === "string"){if(!pattern4.test(data3)){const err14 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/1/pattern",keyword:"pattern",params:{pattern: "^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"},message:"must match pattern \""+"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"+"\""};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}var _valid0 = _errs14 === errors;valid3 = valid3 || _valid0;if(!valid3){const err15 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}else {errors = _errs12;if(vErrors !== null){if(_errs12){vErrors.length = _errs12;}else {vErrors = null;}}}}if(data.model !== undefined){let data4 = data.model;if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.id === undefined){const err16 = {instancePath:instancePath+"/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}if(data4.provider === undefined){const err17 = {instancePath:instancePath+"/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "provider"},message:"must have required property '"+"provider"+"'"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}if(data4.name === undefined){const err18 = {instancePath:instancePath+"/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}if(data4.version === undefined){const err19 = {instancePath:instancePath+"/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "version"},message:"must have required property '"+"version"+"'"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}if(data4.digest === undefined){const err20 = {instancePath:instancePath+"/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "digest"},message:"must have required property '"+"digest"+"'"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}for(const key1 in data4){if(!(((((key1 === "id") || (key1 === "provider")) || (key1 === "name")) || (key1 === "version")) || (key1 === "digest"))){const err21 = {instancePath:instancePath+"/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}if(data4.id !== undefined){if(typeof data4.id !== "string"){const err22 = {instancePath:instancePath+"/model/id",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}if(data4.provider !== undefined){if(typeof data4.provider !== "string"){const err23 = {instancePath:instancePath+"/model/provider",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/provider/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}if(data4.name !== undefined){if(typeof data4.name !== "string"){const err24 = {instancePath:instancePath+"/model/name",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data4.version !== undefined){if(typeof data4.version !== "string"){const err25 = {instancePath:instancePath+"/model/version",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}}if(data4.digest !== undefined){let data9 = data4.digest;if(typeof data9 === "string"){if(!pattern5.test(data9)){const err26 = {instancePath:instancePath+"/model/digest",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/digest/pattern",keyword:"pattern",params:{pattern: "^sha256:[a-fA-F0-9]{64}$"},message:"must match pattern \""+"^sha256:[a-fA-F0-9]{64}$"+"\""};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}else {const err27 = {instancePath:instancePath+"/model/digest",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}}else {const err28 = {instancePath:instancePath+"/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}}if(data.qa_pairs !== undefined){let data10 = data.qa_pairs;if(Array.isArray(data10)){const len0 = data10.length;for(let i0=0; i0<len0; i0++){let data11 = data10[i0];if(data11 && typeof data11 == "object" && !Array.isArray(data11)){if(data11.index === undefined){const err29 = {instancePath:instancePath+"/qa_pairs/" + i0,schemaPath:"#/properties/qa_pairs/items/required",keyword:"required",params:{missingProperty: "index"},message:"must have required property '"+"index"+"'"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}if(data11.question === undefined){const err30 = {instancePath:instancePath+"/qa_pairs/" + i0,schemaPath:"#/properties/qa_pairs/items/required",keyword:"required",params:{missingProperty: "question"},message:"must have required property '"+"question"+"'"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}for(const key2 in data11){if(!(((((((key2 === "index") || (key2 === "question")) || (key2 === "answer")) || (key2 === "confidence")) || (key2 === "unanswered")) || (key2 === "answerType")) || (key2 === "sources"))){const err31 = {instancePath:instancePath+"/qa_pairs/" + i0,schemaPath:"#/properties/qa_pairs/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}}if(data11.index !== undefined){let data12 = data11.index;if(!((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12)))){const err32 = {instancePath:instancePath+"/qa_pairs/" + i0+"/index",schemaPath:"#/properties/qa_pairs/items/properties/index/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}if(typeof data12 == "number"){if(data12 < 0 || isNaN(data12)){const err33 = {instancePath:instancePath+"/qa_pairs/" + i0+"/index",schemaPath:"#/properties/qa_pairs/items/properties/index/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}}}if(data11.question !== undefined){if(typeof data11.question !== "string"){const err34 = {instancePath:instancePath+"/qa_pairs/" + i0+"/question",schemaPath:"#/properties/qa_pairs/items/properties/question/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}}if(data11.answer !== undefined){if(typeof data11.answer !== "string"){const err35 = {instancePath:instancePath+"/qa_pairs/" + i0+"/answer",schemaPath:"#/properties/qa_pairs/items/properties/answer/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}if(data11.confidence !== undefined){let data15 = data11.confidence;if(typeof data15 == "number"){if(data15 > 1 || isNaN(data15)){const err36 = {instancePath:instancePath+"/qa_pairs/" + i0+"/confidence",schemaPath:"#/properties/qa_pairs/items/properties/confidence/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}if(data15 < 0 || isNaN(data15)){const err37 = {instancePath:instancePath+"/qa_pairs/" + i0+"/confidence",schemaPath:"#/properties/qa_pairs/items/properties/confidence/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}}else {const err38 = {instancePath:instancePath+"/qa_pairs/" + i0+"/confidence",schemaPath:"#/properties/qa_pairs/items/properties/confidence/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}}if(data11.unanswered !== undefined){if(typeof data11.unanswered !== "boolean"){const err39 = {instancePath:instancePath+"/qa_pairs/" + i0+"/unanswered",schemaPath:"#/properties/qa_pairs/items/properties/unanswered/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}}if(data11.answerType !== undefined){let data17 = data11.answerType;if(typeof data17 !== "string"){const err40 = {instancePath:instancePath+"/qa_pairs/" + i0+"/answerType",schemaPath:"#/properties/qa_pairs/items/properties/answerType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}if(!(((((data17 === "factual") || (data17 === "analytical")) || (data17 === "summative")) || (data17 === "definition")) || (data17 === "other"))){const err41 = {instancePath:instancePath+"/qa_pairs/" + i0+"/answerType",schemaPath:"#/properties/qa_pairs/items/properties/answerType/enum",keyword:"enum",params:{allowedValues: schema31.properties.qa_pairs.items.properties.answerType.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}}if(data11.sources !== undefined){let data18 = data11.sources;if(Array.isArray(data18)){const len1 = data18.length;for(let i1=0; i1<len1; i1++){let data19 = data18[i1];if(data19 && typeof data19 == "object" && !Array.isArray(data19)){if(data19.canonicalUrl === undefined){const err42 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1,schemaPath:"#/properties/qa_pairs/items/properties/sources/items/required",keyword:"required",params:{missingProperty: "canonicalUrl"},message:"must have required property '"+"canonicalUrl"+"'"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}if(data19.canonicalUrl !== undefined){let data20 = data19.canonicalUrl;if(typeof data20 === "string"){if(!(formats0(data20))){const err43 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/canonicalUrl",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/canonicalUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}}else {const err44 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/canonicalUrl",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/canonicalUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}}if(data19.span !== undefined){let data21 = data19.span;if(data21 && typeof data21 == "object" && !Array.isArray(data21)){if(data21.start === undefined){const err45 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/span",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/span/required",keyword:"required",params:{missingProperty: "start"},message:"must have required property '"+"start"+"'"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}if(data21.end === undefined){const err46 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/span",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/span/required",keyword:"required",params:{missingProperty: "end"},message:"must have required property '"+"end"+"'"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}if(data21.start !== undefined){let data22 = data21.start;if(!((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22)))){const err47 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/span/start",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/span/properties/start/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}}if(data21.end !== undefined){let data23 = data21.end;if(!((typeof data23 == "number") && (!(data23 % 1) && !isNaN(data23)))){const err48 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/span/end",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/span/properties/end/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}}if(data21.unit !== undefined){let data24 = data21.unit;if(typeof data24 !== "string"){const err49 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/span/unit",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/span/properties/unit/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err49];}else {vErrors.push(err49);}errors++;}if(!((data24 === "token") || (data24 === "char"))){const err50 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/span/unit",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/span/properties/unit/enum",keyword:"enum",params:{allowedValues: schema31.properties.qa_pairs.items.properties.sources.items.properties.span.properties.unit.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}}}else {const err51 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/span",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/span/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}}if(data19.quote !== undefined){let data25 = data19.quote;if(typeof data25 === "string"){if(func1(data25) > 300){const err52 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/quote",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/quote/maxLength",keyword:"maxLength",params:{limit: 300},message:"must NOT have more than 300 characters"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}}else {const err53 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1+"/quote",schemaPath:"#/properties/qa_pairs/items/properties/sources/items/properties/quote/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}}}else {const err54 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources/" + i1,schemaPath:"#/properties/qa_pairs/items/properties/sources/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}}}else {const err55 = {instancePath:instancePath+"/qa_pairs/" + i0+"/sources",schemaPath:"#/properties/qa_pairs/items/properties/sources/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}}}else {const err56 = {instancePath:instancePath+"/qa_pairs/" + i0,schemaPath:"#/properties/qa_pairs/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}}}else {const err57 = {instancePath:instancePath+"/qa_pairs",schemaPath:"#/properties/qa_pairs/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}}if(data.provenance !== undefined){let data26 = data.provenance;if(!(validate22(data26, {instancePath:instancePath+"/provenance",parentData:data,parentDataProperty:"provenance",rootData,dynamicAnchors}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}if(data26 && typeof data26 == "object" && !Array.isArray(data26)){if(data26.generatedAt === undefined){const err58 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "generatedAt"},message:"must have required property '"+"generatedAt"+"'"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}}}if(data.length !== undefined){let data27 = data.length;if(data27 && typeof data27 == "object" && !Array.isArray(data27)){for(const key3 in data27){if(!(((((key3 === "inputTokens") || (key3 === "outputTokens")) || (key3 === "totalTokens")) || (key3 === "truncated")) || (key3 === "truncateReason"))){const err59 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}}if(data27.inputTokens !== undefined){let data28 = data27.inputTokens;if(!((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28)))){const err60 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}if(typeof data28 == "number"){if(data28 < 0 || isNaN(data28)){const err61 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}}}if(data27.outputTokens !== undefined){let data29 = data27.outputTokens;if(!((typeof data29 == "number") && (!(data29 % 1) && !isNaN(data29)))){const err62 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err62];}else {vErrors.push(err62);}errors++;}if(typeof data29 == "number"){if(data29 < 0 || isNaN(data29)){const err63 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}}}if(data27.totalTokens !== undefined){let data30 = data27.totalTokens;if(!((typeof data30 == "number") && (!(data30 % 1) && !isNaN(data30)))){const err64 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err64];}else {vErrors.push(err64);}errors++;}if(typeof data30 == "number"){if(data30 < 0 || isNaN(data30)){const err65 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}}}if(data27.truncated !== undefined){if(typeof data27.truncated !== "boolean"){const err66 = {instancePath:instancePath+"/length/truncated",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}}if(data27.truncateReason !== undefined){let data32 = data27.truncateReason;if(typeof data32 !== "string"){const err67 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}if(!((((data32 === "budget_limit") || (data32 === "policy_limit")) || (data32 === "model_limit")) || (data32 === "none"))){const err68 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/enum",keyword:"enum",params:{allowedValues: schema38.properties.truncateReason.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}}}else {const err69 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}if(data27 && typeof data27 == "object" && !Array.isArray(data27)){if(data27.inputTokens === undefined){const err70 = {instancePath:instancePath+"/length",schemaPath:"#/properties/length/allOf/1/required",keyword:"required",params:{missingProperty: "inputTokens"},message:"must have required property '"+"inputTokens"+"'"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}if(data27.outputTokens === undefined){const err71 = {instancePath:instancePath+"/length",schemaPath:"#/properties/length/allOf/1/required",keyword:"required",params:{missingProperty: "outputTokens"},message:"must have required property '"+"outputTokens"+"'"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}}}}else {const err72 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err72];}else {vErrors.push(err72);}errors++;}validate20.errors = vErrors;return errors === 0;}validate20.evaluated = {"props":true,"dynamicProps":false,"dynamicItems":false};