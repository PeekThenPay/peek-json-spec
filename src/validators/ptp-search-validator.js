"use strict";module.exports = validate20;module.exports.default = validate20;const schema31 = {"$schema":"https://json-schema.org/draft/2020-12/schema","title":"Peek-Then-Pay Search Intent Response","type":"object","properties":{"query":{"type":"string"},"mode":{"type":"string","enum":["keyword","vector","hybrid"]},"scoringId":{"type":"string","description":"Identifier of scoring func/model (e.g., bm25, te3l@v1)"},"results":{"type":"array","items":{"type":"object","properties":{"rank":{"type":"integer","minimum":1},"score":{"type":"number","description":"Higher = more relevant. Comparable within same scoringId."},"canonicalUrl":{"type":"string","format":"uri"},"contentType":{"$ref":"common-defs.schema.json#/$defs/contentType"},"mediaType":{"$ref":"common-defs.schema.json#/$defs/mediaType"}},"required":["rank","score","canonicalUrl"],"additionalProperties":false}}},"required":["query","mode","scoringId","results"],"additionalProperties":false};const schema33 = {"type":"string","description":"High-level classification for routing.","enum":["article","blog","doc","news","video","audio","dataset","other"]};const schema34 = {"type":"string","description":"MIME type of the resource.","anyOf":[{"enum":["text/html","text/markdown","text/plain","application/pdf","application/json","image/jpeg","image/png","audio/mpeg","video/mp4","application/octet-stream","unknown"]},{"pattern":"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"}]};const formats0 = require("ajv-formats/dist/formats").fullFormats.uri;const pattern4 = new RegExp("^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$", "u");function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate20.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.query === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "query"},message:"must have required property '"+"query"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.mode === undefined){const err1 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "mode"},message:"must have required property '"+"mode"+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}if(data.scoringId === undefined){const err2 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "scoringId"},message:"must have required property '"+"scoringId"+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}if(data.results === undefined){const err3 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "results"},message:"must have required property '"+"results"+"'"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}for(const key0 in data){if(!((((key0 === "query") || (key0 === "mode")) || (key0 === "scoringId")) || (key0 === "results"))){const err4 = {instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}if(data.query !== undefined){if(typeof data.query !== "string"){const err5 = {instancePath:instancePath+"/query",schemaPath:"#/properties/query/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}if(data.mode !== undefined){let data1 = data.mode;if(typeof data1 !== "string"){const err6 = {instancePath:instancePath+"/mode",schemaPath:"#/properties/mode/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(!(((data1 === "keyword") || (data1 === "vector")) || (data1 === "hybrid"))){const err7 = {instancePath:instancePath+"/mode",schemaPath:"#/properties/mode/enum",keyword:"enum",params:{allowedValues: schema31.properties.mode.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}if(data.scoringId !== undefined){if(typeof data.scoringId !== "string"){const err8 = {instancePath:instancePath+"/scoringId",schemaPath:"#/properties/scoringId/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}if(data.results !== undefined){let data3 = data.results;if(Array.isArray(data3)){const len0 = data3.length;for(let i0=0; i0<len0; i0++){let data4 = data3[i0];if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.rank === undefined){const err9 = {instancePath:instancePath+"/results/" + i0,schemaPath:"#/properties/results/items/required",keyword:"required",params:{missingProperty: "rank"},message:"must have required property '"+"rank"+"'"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}if(data4.score === undefined){const err10 = {instancePath:instancePath+"/results/" + i0,schemaPath:"#/properties/results/items/required",keyword:"required",params:{missingProperty: "score"},message:"must have required property '"+"score"+"'"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}if(data4.canonicalUrl === undefined){const err11 = {instancePath:instancePath+"/results/" + i0,schemaPath:"#/properties/results/items/required",keyword:"required",params:{missingProperty: "canonicalUrl"},message:"must have required property '"+"canonicalUrl"+"'"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}for(const key1 in data4){if(!(((((key1 === "rank") || (key1 === "score")) || (key1 === "canonicalUrl")) || (key1 === "contentType")) || (key1 === "mediaType"))){const err12 = {instancePath:instancePath+"/results/" + i0,schemaPath:"#/properties/results/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}if(data4.rank !== undefined){let data5 = data4.rank;if(!((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5)))){const err13 = {instancePath:instancePath+"/results/" + i0+"/rank",schemaPath:"#/properties/results/items/properties/rank/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}if(typeof data5 == "number"){if(data5 < 1 || isNaN(data5)){const err14 = {instancePath:instancePath+"/results/" + i0+"/rank",schemaPath:"#/properties/results/items/properties/rank/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}}if(data4.score !== undefined){if(!(typeof data4.score == "number")){const err15 = {instancePath:instancePath+"/results/" + i0+"/score",schemaPath:"#/properties/results/items/properties/score/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}if(data4.canonicalUrl !== undefined){let data7 = data4.canonicalUrl;if(typeof data7 === "string"){if(!(formats0(data7))){const err16 = {instancePath:instancePath+"/results/" + i0+"/canonicalUrl",schemaPath:"#/properties/results/items/properties/canonicalUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}else {const err17 = {instancePath:instancePath+"/results/" + i0+"/canonicalUrl",schemaPath:"#/properties/results/items/properties/canonicalUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}if(data4.contentType !== undefined){let data8 = data4.contentType;if(typeof data8 !== "string"){const err18 = {instancePath:instancePath+"/results/" + i0+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}if(!((((((((data8 === "article") || (data8 === "blog")) || (data8 === "doc")) || (data8 === "news")) || (data8 === "video")) || (data8 === "audio")) || (data8 === "dataset")) || (data8 === "other"))){const err19 = {instancePath:instancePath+"/results/" + i0+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/enum",keyword:"enum",params:{allowedValues: schema33.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}if(data4.mediaType !== undefined){let data9 = data4.mediaType;if(typeof data9 !== "string"){const err20 = {instancePath:instancePath+"/results/" + i0+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}const _errs25 = errors;let valid6 = false;const _errs26 = errors;if(!(((((((((((data9 === "text/html") || (data9 === "text/markdown")) || (data9 === "text/plain")) || (data9 === "application/pdf")) || (data9 === "application/json")) || (data9 === "image/jpeg")) || (data9 === "image/png")) || (data9 === "audio/mpeg")) || (data9 === "video/mp4")) || (data9 === "application/octet-stream")) || (data9 === "unknown"))){const err21 = {instancePath:instancePath+"/results/" + i0+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/0/enum",keyword:"enum",params:{allowedValues: schema34.anyOf[0].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}var _valid0 = _errs26 === errors;valid6 = valid6 || _valid0;const _errs27 = errors;if(typeof data9 === "string"){if(!pattern4.test(data9)){const err22 = {instancePath:instancePath+"/results/" + i0+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/1/pattern",keyword:"pattern",params:{pattern: "^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"},message:"must match pattern \""+"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"+"\""};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}var _valid0 = _errs27 === errors;valid6 = valid6 || _valid0;if(!valid6){const err23 = {instancePath:instancePath+"/results/" + i0+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}else {errors = _errs25;if(vErrors !== null){if(_errs25){vErrors.length = _errs25;}else {vErrors = null;}}}}}else {const err24 = {instancePath:instancePath+"/results/" + i0,schemaPath:"#/properties/results/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}}else {const err25 = {instancePath:instancePath+"/results",schemaPath:"#/properties/results/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}}}else {const err26 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}validate20.errors = vErrors;return errors === 0;}validate20.evaluated = {"props":true,"dynamicProps":false,"dynamicItems":false};