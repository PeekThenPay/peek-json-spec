import { fullFormats } from "ajv-formats/dist/formats";
export default validate20;const schema31 = {"$schema":"https://json-schema.org/draft/2020-12/schema","title":"Peek-Then-Pay Summarize Intent Response","description":"Machine-usable semantic summary of a resource, derived from canonical content.","type":"object","properties":{"canonicalUrl":{"type":"string","format":"uri"},"language":{"type":"string","description":"IETF BCP-47 tag for the summary output language; may differ from source."},"contentType":{"$ref":"common-defs.schema.json#/$defs/contentType"},"mediaType":{"$ref":"common-defs.schema.json#/$defs/mediaType"},"summary":{"description":"Primary abstractive or extractive summary text.","type":"string","minLength":20},"lengthClass":{"type":"string","description":"Compression level of the summary relative to original.","enum":["short","medium","long"]},"format":{"type":"string","description":"Presentation format of the summary text.","enum":["plain","markdown","bullets","outline","json"]},"topics":{"type":"array","description":"High-level topical tags derived from summarization or classifier output.","items":{"type":"object","properties":{"topic":{"type":"string"},"confidence":{"type":"number","minimum":0,"maximum":1},"relevance":{"type":"number","minimum":0,"maximum":1}},"required":["topic"]},"maxItems":20},"keywords":{"type":"array","description":"Optional flat list of extracted keyphrases.","items":{"type":"string"},"maxItems":50},"provenance":{"allOf":[{"$ref":"common-defs.schema.json#/$defs/baseProvenance"},{"description":"Describes how, when, and from what the summary was produced.","properties":{"model":{"$ref":"common-defs.schema.json#/$defs/modelMetadata"},"method":{"type":"string","description":"Summarization approach (extractive, abstractive, hybrid, human-curated).","enum":["extractive","abstractive","hybrid","human"]}},"required":["generatedAt","method"]}]},"length":{"allOf":[{"$ref":"common-defs.schema.json#/$defs/baseLength"},{"required":["inputTokens","outputTokens"]}]}},"required":["canonicalUrl","summary","language","contentType","mediaType","provenance","length"],"allOf":[{"if":{"properties":{"provenance":{"properties":{"method":{"not":{"const":"human"}}}}}},"then":{"properties":{"provenance":{"required":["model"]}}}}],"additionalProperties":false};const schema33 = {"type":"string","description":"High-level classification for routing.","enum":["article","blog","doc","news","video","audio","dataset","other"]};const schema34 = {"type":"string","description":"MIME type of the resource.","anyOf":[{"enum":["text/html","text/markdown","text/plain","application/pdf","application/json","image/jpeg","image/png","audio/mpeg","video/mp4","application/octet-stream","unknown"]},{"pattern":"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"}]};const schema36 = {"type":"object","description":"Model information for AI-generated content.","properties":{"id":{"type":"string","description":"Model identifier"},"provider":{"type":"string","description":"Model provider (e.g., 'openai', 'anthropic', 'google', 'meta', 'mistral', 'cohere')"},"name":{"type":"string","description":"Model name"},"version":{"type":"string","description":"Model version"},"digest":{"type":"string","pattern":"^sha256:[a-fA-F0-9]{64}$","description":"SHA256 digest of model"}},"required":["id","provider","name","version","digest"],"additionalProperties":false};const schema38 = {"type":"object","description":"Token counting and truncation tracking for content delivery and billing.","properties":{"inputTokens":{"type":"integer","minimum":0,"description":"Tokens in the source content processed."},"outputTokens":{"type":"integer","minimum":0,"description":"Tokens delivered or generated in response."},"totalTokens":{"type":"integer","minimum":0,"description":"Total tokens processed (may equal input + output)."},"truncated":{"type":"boolean","default":false,"description":"Whether content was truncated due to limits."},"truncateReason":{"type":"string","enum":["budget_limit","policy_limit","model_limit","none"],"default":"none","description":"Reason for truncation if applicable."}},"additionalProperties":false};const func1 = Object.prototype.hasOwnProperty;const func2 = require("ajv/dist/runtime/ucs2length").default;const formats0 = fullFormats.uri;const pattern4 = new RegExp("^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$", "u");const pattern5 = new RegExp("^sha256:[a-fA-F0-9]{64}$", "u");const schema35 = {"type":"object","description":"Core provenance fields for content integrity, generation tracking, and attribution.","properties":{"contentHash":{"type":"string","description":"Stable hash of source content (e.g., sha256:...)."},"generatedAt":{"type":"string","format":"date-time","description":"Timestamp when the response was generated/computed."},"model":{"$ref":"#/$defs/modelMetadata","description":"Model used for content processing or generation."},"sourceUrl":{"type":"string","format":"uri","description":"Original URL where content was retrieved."},"sourceTitle":{"type":"string","description":"Title of the original source document."},"sourceAuthor":{"type":"string","description":"Author or creator of the original content."},"rights":{"type":"string","description":"Copyright or rights statement for the source content."},"attribution":{"type":"string","description":"Required attribution text or format."},"license":{"type":"string","description":"License identifier or URL for the source content."},"algorithm":{"type":"string","description":"Processing algorithm or method used for content transformation."},"confidence":{"type":"number","minimum":0,"maximum":1,"description":"Confidence score for generated or processed content."}},"required":["contentHash"]};const formats2 = fullFormats["date-time"];function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate22.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.contentHash === undefined){const err0 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "contentHash"},message:"must have required property '"+"contentHash"+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(data.contentHash !== undefined){if(typeof data.contentHash !== "string"){const err1 = {instancePath:instancePath+"/contentHash",schemaPath:"#/properties/contentHash/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}if(data.generatedAt !== undefined){let data1 = data.generatedAt;if(typeof data1 === "string"){if(!(formats2.validate(data1))){const err2 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}else {const err3 = {instancePath:instancePath+"/generatedAt",schemaPath:"#/properties/generatedAt/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}if(data.model !== undefined){let data2 = data.model;if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.id === undefined){const err4 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data2.provider === undefined){const err5 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "provider"},message:"must have required property '"+"provider"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data2.name === undefined){const err6 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(data2.version === undefined){const err7 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "version"},message:"must have required property '"+"version"+"'"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}if(data2.digest === undefined){const err8 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "digest"},message:"must have required property '"+"digest"+"'"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}for(const key0 in data2){if(!(((((key0 === "id") || (key0 === "provider")) || (key0 === "name")) || (key0 === "version")) || (key0 === "digest"))){const err9 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}if(data2.id !== undefined){if(typeof data2.id !== "string"){const err10 = {instancePath:instancePath+"/model/id",schemaPath:"#/$defs/modelMetadata/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data2.provider !== undefined){if(typeof data2.provider !== "string"){const err11 = {instancePath:instancePath+"/model/provider",schemaPath:"#/$defs/modelMetadata/properties/provider/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}if(data2.name !== undefined){if(typeof data2.name !== "string"){const err12 = {instancePath:instancePath+"/model/name",schemaPath:"#/$defs/modelMetadata/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}if(data2.version !== undefined){if(typeof data2.version !== "string"){const err13 = {instancePath:instancePath+"/model/version",schemaPath:"#/$defs/modelMetadata/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}}if(data2.digest !== undefined){let data7 = data2.digest;if(typeof data7 === "string"){if(!pattern5.test(data7)){const err14 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/pattern",keyword:"pattern",params:{pattern: "^sha256:[a-fA-F0-9]{64}$"},message:"must match pattern \""+"^sha256:[a-fA-F0-9]{64}$"+"\""};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}else {const err15 = {instancePath:instancePath+"/model/digest",schemaPath:"#/$defs/modelMetadata/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}}else {const err16 = {instancePath:instancePath+"/model",schemaPath:"#/$defs/modelMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}if(data.sourceUrl !== undefined){let data8 = data.sourceUrl;if(typeof data8 === "string"){if(!(formats0(data8))){const err17 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}else {const err18 = {instancePath:instancePath+"/sourceUrl",schemaPath:"#/properties/sourceUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}if(data.sourceTitle !== undefined){if(typeof data.sourceTitle !== "string"){const err19 = {instancePath:instancePath+"/sourceTitle",schemaPath:"#/properties/sourceTitle/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}if(data.sourceAuthor !== undefined){if(typeof data.sourceAuthor !== "string"){const err20 = {instancePath:instancePath+"/sourceAuthor",schemaPath:"#/properties/sourceAuthor/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}if(data.rights !== undefined){if(typeof data.rights !== "string"){const err21 = {instancePath:instancePath+"/rights",schemaPath:"#/properties/rights/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}if(data.attribution !== undefined){if(typeof data.attribution !== "string"){const err22 = {instancePath:instancePath+"/attribution",schemaPath:"#/properties/attribution/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}if(data.license !== undefined){if(typeof data.license !== "string"){const err23 = {instancePath:instancePath+"/license",schemaPath:"#/properties/license/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}}if(data.algorithm !== undefined){if(typeof data.algorithm !== "string"){const err24 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data.confidence !== undefined){let data15 = data.confidence;if(typeof data15 == "number"){if(data15 > 1 || isNaN(data15)){const err25 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}if(data15 < 0 || isNaN(data15)){const err26 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}else {const err27 = {instancePath:instancePath+"/confidence",schemaPath:"#/properties/confidence/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}}else {const err28 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}validate22.errors = vErrors;return errors === 0;}validate22.evaluated = {"props":{"contentHash":true,"generatedAt":true,"model":true,"sourceUrl":true,"sourceTitle":true,"sourceAuthor":true,"rights":true,"attribution":true,"license":true,"algorithm":true,"confidence":true},"dynamicProps":false,"dynamicItems":false};function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){let vErrors = null;let errors = 0;const evaluated0 = validate20.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}const _errs2 = errors;let valid1 = true;const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.provenance !== undefined){let data0 = data.provenance;if(data0 && typeof data0 == "object" && !Array.isArray(data0)){if(data0.method !== undefined){const _errs6 = errors;const _errs7 = errors;if("human" !== data0.method){const err0 = {};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var valid4 = _errs7 === errors;if(valid4){const err1 = {};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}else {errors = _errs6;if(vErrors !== null){if(_errs6){vErrors.length = _errs6;}else {vErrors = null;}}}}}}}var _valid0 = _errs3 === errors;errors = _errs2;if(vErrors !== null){if(_errs2){vErrors.length = _errs2;}else {vErrors = null;}}if(_valid0){const _errs8 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.provenance !== undefined){let data2 = data.provenance;if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.model === undefined){const err2 = {instancePath:instancePath+"/provenance",schemaPath:"#/allOf/0/then/properties/provenance/required",keyword:"required",params:{missingProperty: "model"},message:"must have required property '"+"model"+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}}}var _valid0 = _errs8 === errors;valid1 = _valid0;if(valid1){var props0 = {};props0.provenance = true;}}if(!valid1){const err3 = {instancePath,schemaPath:"#/allOf/0/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(data && typeof data == "object" && !Array.isArray(data)){if(data.canonicalUrl === undefined){const err4 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "canonicalUrl"},message:"must have required property '"+"canonicalUrl"+"'"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(data.summary === undefined){const err5 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "summary"},message:"must have required property '"+"summary"+"'"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}if(data.language === undefined){const err6 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "language"},message:"must have required property '"+"language"+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(data.contentType === undefined){const err7 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "contentType"},message:"must have required property '"+"contentType"+"'"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}if(data.mediaType === undefined){const err8 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "mediaType"},message:"must have required property '"+"mediaType"+"'"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}if(data.provenance === undefined){const err9 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "provenance"},message:"must have required property '"+"provenance"+"'"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}if(data.length === undefined){const err10 = {instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: "length"},message:"must have required property '"+"length"+"'"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}for(const key0 in data){if(!(func1.call(schema31.properties, key0))){const err11 = {instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}if(data.canonicalUrl !== undefined){let data3 = data.canonicalUrl;if(typeof data3 === "string"){if(!(formats0(data3))){const err12 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}else {const err13 = {instancePath:instancePath+"/canonicalUrl",schemaPath:"#/properties/canonicalUrl/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}}if(data.language !== undefined){if(typeof data.language !== "string"){const err14 = {instancePath:instancePath+"/language",schemaPath:"#/properties/language/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}if(data.contentType !== undefined){let data5 = data.contentType;if(typeof data5 !== "string"){const err15 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}if(!((((((((data5 === "article") || (data5 === "blog")) || (data5 === "doc")) || (data5 === "news")) || (data5 === "video")) || (data5 === "audio")) || (data5 === "dataset")) || (data5 === "other"))){const err16 = {instancePath:instancePath+"/contentType",schemaPath:"common-defs.schema.json#/$defs/contentType/enum",keyword:"enum",params:{allowedValues: schema33.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}if(data.mediaType !== undefined){let data6 = data.mediaType;if(typeof data6 !== "string"){const err17 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}const _errs21 = errors;let valid9 = false;const _errs22 = errors;if(!(((((((((((data6 === "text/html") || (data6 === "text/markdown")) || (data6 === "text/plain")) || (data6 === "application/pdf")) || (data6 === "application/json")) || (data6 === "image/jpeg")) || (data6 === "image/png")) || (data6 === "audio/mpeg")) || (data6 === "video/mp4")) || (data6 === "application/octet-stream")) || (data6 === "unknown"))){const err18 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/0/enum",keyword:"enum",params:{allowedValues: schema34.anyOf[0].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}var _valid1 = _errs22 === errors;valid9 = valid9 || _valid1;const _errs23 = errors;if(typeof data6 === "string"){if(!pattern4.test(data6)){const err19 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf/1/pattern",keyword:"pattern",params:{pattern: "^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"},message:"must match pattern \""+"^(text|image|audio|video|application)/[A-Za-z0-9.+-]+$"+"\""};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}var _valid1 = _errs23 === errors;valid9 = valid9 || _valid1;if(!valid9){const err20 = {instancePath:instancePath+"/mediaType",schemaPath:"common-defs.schema.json#/$defs/mediaType/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}else {errors = _errs21;if(vErrors !== null){if(_errs21){vErrors.length = _errs21;}else {vErrors = null;}}}}if(data.summary !== undefined){let data7 = data.summary;if(typeof data7 === "string"){if(func2(data7) < 20){const err21 = {instancePath:instancePath+"/summary",schemaPath:"#/properties/summary/minLength",keyword:"minLength",params:{limit: 20},message:"must NOT have fewer than 20 characters"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}else {const err22 = {instancePath:instancePath+"/summary",schemaPath:"#/properties/summary/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}if(data.lengthClass !== undefined){let data8 = data.lengthClass;if(typeof data8 !== "string"){const err23 = {instancePath:instancePath+"/lengthClass",schemaPath:"#/properties/lengthClass/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}if(!(((data8 === "short") || (data8 === "medium")) || (data8 === "long"))){const err24 = {instancePath:instancePath+"/lengthClass",schemaPath:"#/properties/lengthClass/enum",keyword:"enum",params:{allowedValues: schema31.properties.lengthClass.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}if(data.format !== undefined){let data9 = data.format;if(typeof data9 !== "string"){const err25 = {instancePath:instancePath+"/format",schemaPath:"#/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}if(!(((((data9 === "plain") || (data9 === "markdown")) || (data9 === "bullets")) || (data9 === "outline")) || (data9 === "json"))){const err26 = {instancePath:instancePath+"/format",schemaPath:"#/properties/format/enum",keyword:"enum",params:{allowedValues: schema31.properties.format.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}if(data.topics !== undefined){let data10 = data.topics;if(Array.isArray(data10)){if(data10.length > 20){const err27 = {instancePath:instancePath+"/topics",schemaPath:"#/properties/topics/maxItems",keyword:"maxItems",params:{limit: 20},message:"must NOT have more than 20 items"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}const len0 = data10.length;for(let i0=0; i0<len0; i0++){let data11 = data10[i0];if(data11 && typeof data11 == "object" && !Array.isArray(data11)){if(data11.topic === undefined){const err28 = {instancePath:instancePath+"/topics/" + i0,schemaPath:"#/properties/topics/items/required",keyword:"required",params:{missingProperty: "topic"},message:"must have required property '"+"topic"+"'"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}if(data11.topic !== undefined){if(typeof data11.topic !== "string"){const err29 = {instancePath:instancePath+"/topics/" + i0+"/topic",schemaPath:"#/properties/topics/items/properties/topic/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}}if(data11.confidence !== undefined){let data13 = data11.confidence;if(typeof data13 == "number"){if(data13 > 1 || isNaN(data13)){const err30 = {instancePath:instancePath+"/topics/" + i0+"/confidence",schemaPath:"#/properties/topics/items/properties/confidence/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;}if(data13 < 0 || isNaN(data13)){const err31 = {instancePath:instancePath+"/topics/" + i0+"/confidence",schemaPath:"#/properties/topics/items/properties/confidence/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}}else {const err32 = {instancePath:instancePath+"/topics/" + i0+"/confidence",schemaPath:"#/properties/topics/items/properties/confidence/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}}if(data11.relevance !== undefined){let data14 = data11.relevance;if(typeof data14 == "number"){if(data14 > 1 || isNaN(data14)){const err33 = {instancePath:instancePath+"/topics/" + i0+"/relevance",schemaPath:"#/properties/topics/items/properties/relevance/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}if(data14 < 0 || isNaN(data14)){const err34 = {instancePath:instancePath+"/topics/" + i0+"/relevance",schemaPath:"#/properties/topics/items/properties/relevance/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}}else {const err35 = {instancePath:instancePath+"/topics/" + i0+"/relevance",schemaPath:"#/properties/topics/items/properties/relevance/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}}}else {const err36 = {instancePath:instancePath+"/topics/" + i0,schemaPath:"#/properties/topics/items/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}}}else {const err37 = {instancePath:instancePath+"/topics",schemaPath:"#/properties/topics/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}}if(data.keywords !== undefined){let data15 = data.keywords;if(Array.isArray(data15)){if(data15.length > 50){const err38 = {instancePath:instancePath+"/keywords",schemaPath:"#/properties/keywords/maxItems",keyword:"maxItems",params:{limit: 50},message:"must NOT have more than 50 items"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}const len1 = data15.length;for(let i1=0; i1<len1; i1++){if(typeof data15[i1] !== "string"){const err39 = {instancePath:instancePath+"/keywords/" + i1,schemaPath:"#/properties/keywords/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}}}else {const err40 = {instancePath:instancePath+"/keywords",schemaPath:"#/properties/keywords/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}}if(data.provenance !== undefined){let data17 = data.provenance;if(!(validate22(data17, {instancePath:instancePath+"/provenance",parentData:data,parentDataProperty:"provenance",rootData,dynamicAnchors}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}if(data17 && typeof data17 == "object" && !Array.isArray(data17)){if(data17.generatedAt === undefined){const err41 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "generatedAt"},message:"must have required property '"+"generatedAt"+"'"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}if(data17.method === undefined){const err42 = {instancePath:instancePath+"/provenance",schemaPath:"#/properties/provenance/allOf/1/required",keyword:"required",params:{missingProperty: "method"},message:"must have required property '"+"method"+"'"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}if(data17.model !== undefined){let data18 = data17.model;if(data18 && typeof data18 == "object" && !Array.isArray(data18)){if(data18.id === undefined){const err43 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "id"},message:"must have required property '"+"id"+"'"};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}if(data18.provider === undefined){const err44 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "provider"},message:"must have required property '"+"provider"+"'"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}if(data18.name === undefined){const err45 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "name"},message:"must have required property '"+"name"+"'"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}if(data18.version === undefined){const err46 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "version"},message:"must have required property '"+"version"+"'"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}if(data18.digest === undefined){const err47 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/required",keyword:"required",params:{missingProperty: "digest"},message:"must have required property '"+"digest"+"'"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}for(const key1 in data18){if(!(((((key1 === "id") || (key1 === "provider")) || (key1 === "name")) || (key1 === "version")) || (key1 === "digest"))){const err48 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;}}if(data18.id !== undefined){if(typeof data18.id !== "string"){const err49 = {instancePath:instancePath+"/provenance/model/id",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err49];}else {vErrors.push(err49);}errors++;}}if(data18.provider !== undefined){if(typeof data18.provider !== "string"){const err50 = {instancePath:instancePath+"/provenance/model/provider",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/provider/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err50];}else {vErrors.push(err50);}errors++;}}if(data18.name !== undefined){if(typeof data18.name !== "string"){const err51 = {instancePath:instancePath+"/provenance/model/name",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err51];}else {vErrors.push(err51);}errors++;}}if(data18.version !== undefined){if(typeof data18.version !== "string"){const err52 = {instancePath:instancePath+"/provenance/model/version",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err52];}else {vErrors.push(err52);}errors++;}}if(data18.digest !== undefined){let data23 = data18.digest;if(typeof data23 === "string"){if(!pattern5.test(data23)){const err53 = {instancePath:instancePath+"/provenance/model/digest",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/digest/pattern",keyword:"pattern",params:{pattern: "^sha256:[a-fA-F0-9]{64}$"},message:"must match pattern \""+"^sha256:[a-fA-F0-9]{64}$"+"\""};if(vErrors === null){vErrors = [err53];}else {vErrors.push(err53);}errors++;}}else {const err54 = {instancePath:instancePath+"/provenance/model/digest",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err54];}else {vErrors.push(err54);}errors++;}}}else {const err55 = {instancePath:instancePath+"/provenance/model",schemaPath:"common-defs.schema.json#/$defs/modelMetadata/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err55];}else {vErrors.push(err55);}errors++;}}if(data17.method !== undefined){let data24 = data17.method;if(typeof data24 !== "string"){const err56 = {instancePath:instancePath+"/provenance/method",schemaPath:"#/properties/provenance/allOf/1/properties/method/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err56];}else {vErrors.push(err56);}errors++;}if(!((((data24 === "extractive") || (data24 === "abstractive")) || (data24 === "hybrid")) || (data24 === "human"))){const err57 = {instancePath:instancePath+"/provenance/method",schemaPath:"#/properties/provenance/allOf/1/properties/method/enum",keyword:"enum",params:{allowedValues: schema31.properties.provenance.allOf[1].properties.method.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err57];}else {vErrors.push(err57);}errors++;}}}}if(data.length !== undefined){let data25 = data.length;if(data25 && typeof data25 == "object" && !Array.isArray(data25)){for(const key2 in data25){if(!(((((key2 === "inputTokens") || (key2 === "outputTokens")) || (key2 === "totalTokens")) || (key2 === "truncated")) || (key2 === "truncateReason"))){const err58 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err58];}else {vErrors.push(err58);}errors++;}}if(data25.inputTokens !== undefined){let data26 = data25.inputTokens;if(!((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26)))){const err59 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err59];}else {vErrors.push(err59);}errors++;}if(typeof data26 == "number"){if(data26 < 0 || isNaN(data26)){const err60 = {instancePath:instancePath+"/length/inputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/inputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err60];}else {vErrors.push(err60);}errors++;}}}if(data25.outputTokens !== undefined){let data27 = data25.outputTokens;if(!((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27)))){const err61 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err61];}else {vErrors.push(err61);}errors++;}if(typeof data27 == "number"){if(data27 < 0 || isNaN(data27)){const err62 = {instancePath:instancePath+"/length/outputTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/outputTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err62];}else {vErrors.push(err62);}errors++;}}}if(data25.totalTokens !== undefined){let data28 = data25.totalTokens;if(!((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28)))){const err63 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err63];}else {vErrors.push(err63);}errors++;}if(typeof data28 == "number"){if(data28 < 0 || isNaN(data28)){const err64 = {instancePath:instancePath+"/length/totalTokens",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/totalTokens/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err64];}else {vErrors.push(err64);}errors++;}}}if(data25.truncated !== undefined){if(typeof data25.truncated !== "boolean"){const err65 = {instancePath:instancePath+"/length/truncated",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err65];}else {vErrors.push(err65);}errors++;}}if(data25.truncateReason !== undefined){let data30 = data25.truncateReason;if(typeof data30 !== "string"){const err66 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err66];}else {vErrors.push(err66);}errors++;}if(!((((data30 === "budget_limit") || (data30 === "policy_limit")) || (data30 === "model_limit")) || (data30 === "none"))){const err67 = {instancePath:instancePath+"/length/truncateReason",schemaPath:"common-defs.schema.json#/$defs/baseLength/properties/truncateReason/enum",keyword:"enum",params:{allowedValues: schema38.properties.truncateReason.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err67];}else {vErrors.push(err67);}errors++;}}}else {const err68 = {instancePath:instancePath+"/length",schemaPath:"common-defs.schema.json#/$defs/baseLength/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err68];}else {vErrors.push(err68);}errors++;}if(data25 && typeof data25 == "object" && !Array.isArray(data25)){if(data25.inputTokens === undefined){const err69 = {instancePath:instancePath+"/length",schemaPath:"#/properties/length/allOf/1/required",keyword:"required",params:{missingProperty: "inputTokens"},message:"must have required property '"+"inputTokens"+"'"};if(vErrors === null){vErrors = [err69];}else {vErrors.push(err69);}errors++;}if(data25.outputTokens === undefined){const err70 = {instancePath:instancePath+"/length",schemaPath:"#/properties/length/allOf/1/required",keyword:"required",params:{missingProperty: "outputTokens"},message:"must have required property '"+"outputTokens"+"'"};if(vErrors === null){vErrors = [err70];}else {vErrors.push(err70);}errors++;}}}}else {const err71 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err71];}else {vErrors.push(err71);}errors++;}validate20.errors = vErrors;return errors === 0;}validate20.evaluated = {"props":true,"dynamicProps":false,"dynamicItems":false};